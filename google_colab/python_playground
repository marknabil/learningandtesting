{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"python_playground","version":"0.3.2","views":{},"default_view":{},"provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python2","display_name":"Python 2"}},"cells":[{"metadata":{"id":"xbuaH92IYp6n","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["import numpy as np\n","from scipy import fftpack\n","from scipy import integrate\n","\n","import matplotlib.pyplot as plt\n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"hCbvhVYRVKsz","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}},"cellView":"form"},"cell_type":"code","source":["#@title part for the project eurler problems\n","\n","# https://projecteuler.net/problem=1"],"execution_count":0,"outputs":[]},{"metadata":{"id":"QvM4sGLCR0UG","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["def natu(x):\n","  temp=0\n","  for i in range(x):\n","    \n","    if (i%3==0 or i%5==0):\n","      temp +=i\n","    #print temp\n","  return temp\n","  "],"execution_count":0,"outputs":[]},{"metadata":{"id":"nGE_xOtjSYLL","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"base_uri":"https://localhost:8080/","height":35},"outputId":"46300904-47c0-48c0-e96f-dc375c0b77a8","executionInfo":{"status":"ok","timestamp":1525809008738,"user_tz":-120,"elapsed":565,"user":{"displayName":"mark nabil","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s128","userId":"100349270716175055813"}}},"cell_type":"code","source":["print(natu(1000))"],"execution_count":11,"outputs":[{"output_type":"stream","text":["233168\n"],"name":"stdout"}]},{"metadata":{"id":"4lMGAeIiVZtH","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}},"cellView":"form"},"cell_type":"code","source":["#@title problem 2 in proj euler\n","#https://projecteuler.net/problem=2"],"execution_count":0,"outputs":[]},{"metadata":{"id":"WmQsUJLGVJYU","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["def fibo(x):\n","  fibo_seq = []\n","  for i in range(x):\n","    sum += \n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"ZztMkeca_f36","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"base_uri":"https://localhost:8080/","height":677},"outputId":"2c853e3b-38d0-4a3b-8f10-94453ae8749d","executionInfo":{"status":"ok","timestamp":1525857178903,"user_tz":-120,"elapsed":913,"user":{"displayName":"mark nabil","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s128","userId":"100349270716175055813"}}},"cell_type":"code","source":["import numpy as np\n","import matplotlib.pylab as plt\n","\n","\n","def tube():\n","    # play with the pi will give you change in the arc to complete circle\n","    \n","    theta = np.linspace(0, 2*np.pi, 30)\n","    \n","    x = np.cos(theta)\n","    y = np.sin(theta)\n","    z = x*1.5\n","    w = y*1.5\n","\n","    plt.plot(z,w)\n","    plt.plot(x,y)\n","    \n","    \n","def circle():  \n","\n","    theta = np.linspace(0, 2*np.pi, 30)\n","\n","    x_0=1\n","    y_0=1\n","    x = x_0*np.cos(theta)\n","    y = y_0*np.sin(theta)\n","    z = x*1.5\n","    w = y*1.5\n","\n","    plt.plot(z,w,'red')\n","    plt.plot(x,y,'green')\n","    \n","    \n","def euler():\n","    A, B, a = 40, 10, 2\n","\n","    t  = 10  # time\n","    dt = 1e-3 # interval\n","\n","    nbpt = int(t/dt)\n","\n","    n = 1\n","    s = 1. # sign of the derivative, initially chosen\n","    y = [0]*nbpt # result\n","\n","def polarmap(x, y):\n","    # normalize x and y from 0 to 1\n","    x = (x-x.min())/(x.max()-x.min())\n","    y = (y-y.min())/(y.max()-y.min())\n","\n","    # make theta go from 0 to pi/2\n","    theta = np.pi*x/2\n","\n","    # make r go from 0.8 to 1.0 (the min and max tube radius)\n","    r = 0.2*y + 0.8\n","\n","    # convert polar to cartesian\n","    x = r*np.cos(theta)\n","    y = r*np.sin(theta)\n","    plt.plot(x, y)\n","\n","    \n","fig, ax = plt.subplots()\n","#tube()\n","circle()\n","#x, y = euler()\n","#polarmap(x, y)\n","plt.axis(\"equal\")\n","plt.show()\n","\n","fig, ax = plt.subplots()\n","plt.axis(\"equal\")\n","plt.show()\n"],"execution_count":5,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAecAAAFKCAYAAAAnj5dkAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMS4yLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvNQv5yAAAIABJREFUeJzs3Xd0VNXexvHvtEx6JUBCkQ7SpBeR\nEooUpQlIBxXsil7Rq1wLFlC5r9gAG6IiKKCCVAUVQhHpvfcOhpaElEmmnfePhChXxJRJ9pyZ32ct\n1iVMynP3jPNkn7PPPgZN0zSEEEII4TWMqgMIIYQQ4lpSzkIIIYSXkXIWQgghvIyUsxBCCOFlpJyF\nEEIILyPlLIQQQngZs+oAV124kKY6wj+KigomOTlTdQy/IGNdcmSsS46MdcnQyzjHxob97WMycy4A\ns9mkOoLfkLEuOTLWJUfGumT4wjhLOQshhBBeRspZCCGE8DJSzkIIIYSXkXIWQgghvIyUsxBCCOFl\npJyFEEIILyPlLIQQQngZKWchhBDCyxSpnA8ePEjHjh2ZOXPmXx5r3749gwYNYujQoQwdOpSkpKSi\n/CghhBDCbxR6+87MzExee+01WrZs+befM3XqVEJCQgr7I4QQQgi/VOhyDggIYOrUqUydOtWTeYQQ\nJcXtxpCZAfYrmI6fw5CehiEt9096Gsa0KwA4q9XAVbMW7rh4MBgUhxbCPxS6nM1mM2bzjb987Nix\nnDlzhsaNGzN69GgMN/gPOyoqWBf7od5oo3LhWTLWf8PhgCtX/viTlnbtx9f7c73PSUsDTQMgOj8/\nNywMatf+65+KFcEoy1fyS17XJUPv41xsd6UaNWoUrVu3JiIigkcffZRly5bRpUuXv/18vdxBRA93\nz/IFMtaA3Y5l43oCEpdjWb0S05nTObPbrKxCfTvNYkELC0MLDUercBPusDC0sDCspaKxmQNzHsv9\n4w4LRwsNw+B0YDp0ENPBA5gP7se0dSuGDRuu/b7BwTir18RVoybOmrVw1aiFs0ZN3DdVApP3/8Jd\nkuR1XTL0Ms43+gWi2Mq5V69eeX9v06YNBw8evGE5C+H3NA3TsSNYEpcTkLicgF/X5Bx2BrSAAFwV\nb0KrUCGnXPNKNLdQQ8L+VK5/ejw09+PQULBar3tYOjY2jPT8vpE5HJiOH8N0YH9OWR/cj/nAAcz7\n92LZse3a/ztWK65qNXDWrJlb2LVw1ayFq1JlsFiKPFxC+LJiKee0tDSefPJJPvzwQwICAti0aROd\nO3cujh8lhK4Z0q5gWbM6p4wTl2M6eTzvMWe16tgTOuBI6IC95W3gDYsrLRZc1Wvgql4DOz3++HeX\nC+OJ45gPHsgt7P05s+1DBzDv2XXNt9AsFlxVq+WUdY2auGrmFneVqjm/QAghCl/Ou3fvZsKECZw5\ncwaz2cyyZcto37495cuXp1OnTrRp04b+/ftjtVqpXbu2zJqFAHC7Me/akXOoOnE5lk0bMDidOQ+F\nR5B9Rw/sCR2wJ3TAXaGi4rAFYDLhrlIVe5Wq0KXbH//udmM8fSpnln0gt7hz/x64f98130IzmXBV\nqoyzXn2y7x6IPaGjHBYXfsugabkrQhTTy/kBPeT0Bb401oakJAJW5h6qXp2I8eJFADSDAWfDRtjb\ndcCe0BFn4ybwD4ssi4OSsdY0jOfO/unw+IHc2fZ+jCkpALjKVyBr0FCyBg3FHV+uZPMVE196XXsz\nvYzzjc45SzkXgF6ecF+g67H+00KugBW/XHNY11WmbM5h6vYdsbdphxYdozBoDq8aa03DvHM7gV9+\ngXXetxgz0tGMRuydOpM19B7sHW7X9Wzaq8bah+llnKWcPUQvT7gv0NVY/8NCLkeLVnmHql031/a6\na4W9dawN6WlYv59L4IzPsWzPWWzmii+XM5sePAx3ufKKExact461r9HLOEs5e4hennBf4O1jfcOF\nXNVrXLuQKzhYXdB88PaxBnJm0zOmY537Dcb0tJzZdIdOZA29F3vH25WcDigMPYy1L9DLOEs5e4he\nnnBf4K1jbUz6neCJEwj86ksMDgeQs5DL0bqtPhdy4b1jfV3p6QQumJczm966BQBX2bg/ZtNePva6\nGmsd08s4Szl7iF6ecF/gbWNtSE0hePJ7BH3yAQabDWflKmT37qt0IZeneNtY55dp106CZn6B9btv\nMKZdQTMYsLfvmDOb7tTZK6+l1utY641exlnK2UP08oT7Aq8Z68xMgj79mOBJ72BMTcFVNo7MZ8aQ\nNWCwV775F4bXjHVhZWRgXfg9QV9+jmXLJiBn4V3WoCFkDR6Ou+JNigP+QfdjrRN6GecblbNsiCvE\n9TgcBE7/jOjmDQgdNxYMkP7Sa1zesJ2soff4TDH7hJAQsgcOIeXH5VxO/A3biAcw2GyEvPMW0U3r\nE9G/NwGLF+bsSS6ETsjMuQD08tuYL1A21m431gXzCH5zHOZjR9GCg8l88BFsj4xCi4gs+TwlwCdf\n15mZObPpGV9g2ZSzF7g7tjRZg4ZiGzwMd6XKSmL55Fh7Ib2Ms8ychfgnmkbA8p+I7NiG8Afvw3Tq\nJLb77ufShh1kjnnJZ4vZZwUHkz1gMClLfubyqvVk3v8Q2O0EvzeRmGa3ENGvJwGL5oPdrjqpENcl\n5Sz8nnnjBiJ6dSNiYF/Me3aR1bc/l3/bQvqbE9HKlFEdTxSR6+baZIz/L5d2HuDK5I9xNG9JwKpE\nIkYMI6bBzQRO/yzv1plCeAspZ+G3TPv2Ej5sAFF3diJg3Vqyb+9C8oq1pH0wVdlhT1GMgoLIvnsg\nKYuWcXnNRjIffASyswl75kki+vfGePaM6oRC5JFyFn7HeOI4YY8+QFS7lliX/oCjeUuSF/3ElZnf\n4KpTV3U8UQJcNWuR8dqbJP+6EXv7jgSsXEFUmxZY53wts2jhFaSchd8wnD9PyH+eIfrWxgR+OxvX\nzXVI/fpbUhYuxdm8hep4QgF3XDyps+aSNvF9cLkIf/whwocPxJCUpDqa8HNSzsLnGa6kEvzma8Q0\nu4XgTz/GHV+OKx9NI3nFr9g7dva6va5FCTMYyBp6D8mr1mFv1Rrr0h+IbtucgIXfq04m/JiUs/Bd\nNhtBU94numl9Qt7+P9yhoaRNeJvLazeTfVc/MMrLX/zBXfEmUucuIn38BAw2GxEjhxP2wD0YLl9S\nHU34IXl3Er7H6SRw5nSiWzQk9JUXwK2R/sLLORuI3DsSAgJUJxTeymjEdv/DJK/4FUeTZgTOn0d0\n6+YELPtRdTLhZ6Sche/QNAIWzSeqTXPCnnocY0oymaOe4vKmHdhGPQUhIaoTCp1wVa1OyqJlpL/4\nKobUFCKG9ids1MMYrqSqjib8hJSz8A3Z2YQ9+gARI4ZhOn4M2/ARXN6wnYwXXkaLjFKdTuiRyYTt\n8SdJ/nk1jvoNCJz9FVFtWmBZuUJ1MuEHpJyF7hkuXiSyT3cCv5uDo3FTLv+6ifT/ewd32TjV0YQP\ncN1cm5Qfl5PxzBiM55OIvLsXof/+F6Snq44mfJiUs9A106GDRHVtj2XjerJ69yFl3mLcVaqqjiV8\njcVC5jNjSFm6Ametmwn6YhrRCbdiWbdWdTLho6SchW5ZViUS2bUDphPHyRj9LGkffQZBQapjCR/m\nrN+A5J9XkznqKYynThLRqxshL44Bm011NOFjpJyFLgXO+IKIAXdhyLJxZconZD77vFyvLEqG1UrG\nCy+TsvgnXFWqEvzxFKI63IY5917SQniClLPQF5eLkJdfIGz0KLSICFK+W0R2vwGqUwk/5GzSjOTl\nv5L5wMOYDx8i8o5OBL/+KmRnq44mfICUs9CPjAzC7x1C8Afv46xeg+QfV+Bs0VJ1KuHPgoPJGDeB\nlO+X4C5fgZB33yKqcwKmXTtVJxM6J+UsdMF47iyRPbpgXboEe+u2pCz5GXflKqpjCQGAo1Vrklf+\nhm3ovZj37iaqczuC3/4vOJ2qowmdknIWXs+8czuRnROw7NqBbeg9pM6eJ9cuC6+jhYaRPvE9UmbP\nxR1bmpA3xxHZrQOmgwdURxM6JOUsvFrAj0uI7NEFY9LvpL88nvS33gOLRXUsIf6Wo30nklevJ+vu\ngVi2byPyjk5ymFsUmJSz8E6aRtAHkwi/ZxAAVz7/Ctsjj8uKbKELWkQkaZM/5sr7H2JMTSGyfy9M\nhw+pjiV0xKw6gBB/4XDAgw8SOnUqrrJxXJk5B2f9BqpTCVFg2QMGk2azEfbsU0T07QFrf4WQGNWx\nhA7IzFl4FUNKMhED+sDUqTjq3ULKskQpZqFrWfeOJP2l1zCdPQMdOmD8/ZzqSEIHpJyF1zAeO0rk\nHZ0IWLMSevQgZcGPuOPiVccSoshsjz1BxlPPwNGjRPTrieGS3CNa3JiUs/AK5vXriOraHvOhg2Q+\n/DjMmwehoapjCeExmc++AE88gfnA/pzd7eT2k+IGpJyFctZvZxPZtzuG1FTS3nqPjFfGg8mkOpYQ\nnmUwwNtvYxs0FMuObUQMvhsyMlSnEl5Kylmoo2kETxhP+KMPoAUGkTprLlnD7lWdSojiYzSSPvF9\nsnrehWXDOiLuHSzbfYrrknIWamRlEfbQfYRMnICrYiVSfvgFR7v2qlMJUfxMJtKmfEJ2p84ErFxB\n+IP3yU5i4i+knEWJM1y4QORddxL4/VwczVqQvHQFrho1VccSouQEBHDl0y+x39YG6w+LCHviEXC7\nVacSXqRI5Xzw4EE6duzIzJkz//LYb7/9Rt++fenfvz9Tpkwpyo8RviQjg8g+d2LZvJGsu/qR8t1C\ntFKlVKcSouQFBXHly1k4Gjch8NvZhD43GjRNdSrhJQpdzpmZmbz22mu0bHn9uwKNGzeOSZMmMWvW\nLNauXcvhw4cLHVL4CE0j7N//wrx/H7bhI0j78FMIDFSdSghltNAwUmfNxVm7LkFfTCPktbFS0AIo\nQjkHBAQwdepUSpcu/ZfHTp06RUREBHFxcRiNRtq2bcu6deuKFFToX+DM6QR+OxtHo8akj58gW3F6\nEU3TyHBkkJTxO0dSDpGanaI6kt/QIqNI+WY+zqrVCJ78LsHvvqU6kvAChd6+02w2YzZf/8svXLhA\ndHR03sfR0dGcOnWqsD9K+ADTrp2E/ucZ3JGRXJk6HQICVEfyGS63i7MZZ0izp5FmTyPdfiXn7460\n3H+7Qro9jXRHet7HafY00nMfv/q/bu3ac55lgstSI7oWNaNqUiOqFjWja1EjqhYxQbL9pKdppUuT\n+t1CInt0IeSN19BCQrA98IjqWEIhr9lbOyoqGLPZ+69tjY0NUx1Bf1JT4YHhkJ2NYe5cYhrVydeX\nyVj/vVOpp1h2ZBnLjizjl6O/kJJVsJmuyWAiIjCCcGs4N4XcRFhAGOHWcMKt4YQGhHI27Sx7L+xl\nzemVrDm98pqvjQ2OpXZs7b/8KRNSBoMcDflHf/u6jr0ZViyH1q0JfeE5QuNi4b77SjacD9H7+0ex\nlHPp0qW5ePFi3sdJSUnXPfz9Z8nJmcURxaNiY8O4cCFNdQx90TTCRwzHeuQImaOeIqNZG8jHGMpY\nX8vmtLHu7FoST/5C4qnlHEz+4x7BFcIq0r5CJ6ICowi1hBEWEEZoQBhhljDCAsIJC8j9N0soobkf\nB5oC84r0RmOd7kjncPJBDlzez8HkAxxM3s+By/tZfWI1q06suuZzI62ReTPs6lE1cv4eVYv40HJS\n2rn+8XUdUQbTNwuI7NkFw/33k+Y2kd3zrpIL6CP08v5xo18giqWcy5cvT3p6OqdPn6Zs2bIkJiby\n1ltyHsUfBU39EOviBdhbtiLjuRdUx9ENTdM4kLyfxJPLSTz1C+vP/kaWKwuAYHMwHSveTkLFDiRU\n6EjVyGrFVn6hllAalG5Eg9KNrvl3m9PG4ZRDHLy8P7ewc4p7S9ImNv6+/prPLR1choG1hjD45mFU\niqhcLDl9iavWzaTO+Z6Iu7oT9vBItOBg7J26qI4lSphB0wq3NHD37t1MmDCBM2fOYDabKVOmDO3b\nt6d8+fJ06tSJTZs25RXy7bffzogRI274/fTyW44ecnoL8+aNRPboghYZRfKKX3GXjcv31/rjWCdn\nXWb16ZUknlzOylMrOJtxJu+x2jF1SajQgYSKHWge1xKryeqxn+vJsc52ZXMs9SgHL+/nQO4se9Xp\nxLwFZm3LJzCszn10qdQNi8nikZ+pJwUZa8v634jo3xvcblJnzcVxW5tiTuc79PL+caOZc6HL2dP0\nMpB6yOkNDJcvEdWhNcazZ0j9dgGONu0K9PX+MNZOt5OtSVtIPPULK08tZ9v5rXmLsqIDo2lXoT3t\nKnQgoUIHyoSULbYcxT3WNqeNxUcW8OXez9lwLueqjdig0gyoNZjBtYdRJaJqsf1sb1PQsbas+IWI\nYQPAbCHluwU4mzQrxnS+Qy/vH1LOHqKXJ1w5t5vwwf2wLv+ZjGefJ3P0swX+Fr481hdtF3lv60Rm\n7/8qb0ZpMphoUrZZzuy4QgfqxzbAZCyZBZIlOdYHLu9n5t4vmHPga1Jy/7+3Lt+OYbXvoWvlOwkw\n+fYq/sKMdcCSRYSPHIYWGkbK90tw1a1XTOl8h17eP6ScPUQvT7hqQe9NJHT8K9gTOpA6ay4YC345\nvS+Odbo9jY92TOGD7ZNId6RRNiSO22/qSkLFDrQu14Zwa4SSXCrGOsuZxeKjC5ix9wvWnV0LQKmg\nUvSvOZihtYdTJbJaieYpKYUda+s3swh/7EHcpWJJWbgUV7XqxZDOd+jl/UPK2UP08oSrZFm7hog+\n3XGXKUvy8l8LvTWnL411tiub6bun8e7Wt7hou0ipoFL8q/EzDKtzn0fPHReW6rE+lHyQGXu/YM7+\nr0jOTgbgtnJtGFr7HrpV6e4VY+QpRRnrwM8/JezZp3CVK09y4lq0yCgPp/Mdql/T+SXl7CF6ecJV\nMSQlEdXhNoyXL5Ey/0eczZoX+nv5wli73C6+PTib/258ndPppwi1hPFow1E8WP8RQgO85xpMbxnr\nLGcWPxxbxIw9X7D27Bog59x7zmz6HqpF6X+2WNSxDn5zHCFv/xfbiAdIf0OugPk73vKa/idSzh6i\nlydcCZeLiH49Cfh1Nekvj8f2yONF+nZ6HmtN0/jx2BLe2PAqB5L3YzVZubfu/TzRaLRX7q7ljWN9\nOPkQM/dNZ87+r7iUdQnImU2Pu20CtWPyt4mNNyryWNvtRLVrienoEVJ+XoWz3i2eC+dDvPE1fT03\nKme5ZaTwiOD/jifg19Vkd70T28OPqY6jzK9nVtNtXgfuWTqIQykHGVRrKOsGbeXVVq97ZTF7q2pR\n1Xn51nFsH76fTzp9zm3l2vDrmdV0+rYN722ZiNPtp/c/Dggg/Y23MLjdhD47Wm4z6cOknEWRBSz/\niZB33sJVsRJp73/glze02HF+G3cv6sVdC+5kS9Jm7qzSk9X9N/Bu+ymUD6ugOp5uWU1WelXvw7ye\ni/mq2zdEB8YwfsMrdP/+dg4nH1IdTwlH2wSyet6FZfNGrHO+Vh1HFBMpZ1EkxjOnCXv0AbSAAK5M\nm44WEak6Uok6knKI+5fdQ6fv2rLy1Apal2/Hsj6JfNZlBjWia6qO51M6VerC6gHruat6P7Ykbab9\nN634eMeUv9ywwx9kvDIeLTiE0FdfxJB8WXUcUQyknEXh2e2EjxyO8fJl0sdNwHlLQ9WJSszZ9DOM\nXjmK22Y1Y8GReTSIbci33Rcwt8dCGpZprDqez4oKjOajTtOY1nkGIZYQXlw7ht4L7uB46jHV0UqU\nO74cGU8/h/HSJULeeE11HFEMpJxFoYW8NhbLlk1k3dWPrOH+cfccl9vFhI3jafFVQ2bs/YLKEVWY\n1nkGy/qupG2FBNXx/Eb3qj1ZPWAj3Sp3Z93ZtbSbcyvT93yGl6xvLRG2Bx7GWaMmgdM/w7xjm+o4\nwsOknEWhBCxZRPDHU3BWr0HaW+/5xXnmdEc69ywdxMTNE4gOjOHdhCmsHrCB7lV7yl2XFIgNjuXz\nLjP5oONULCYLz6x6kv6Le3Mm7bTqaCXj6uIwTSP02adkcZiPkXIWBWY8dpSwUQ+jBQVxZdoMCA1V\nHanYnU0/Q4/vu7Ds+I+0Lt+OVQPWMejmoZiNXnNLdL9kMBjoW6M/q/uvp0PFTqw8tYK2c1oyZ//X\nfjGLdrRuS1bvPli2biHw6xmq4wgPknIWBZOVlXOeOe0Kaf99B1etm1UnKnY7zm+j83cJ7L64k6G1\n72X2HXOJsPrXwjdvFxcaz9d3fMfb7Sbh0lw8vuIhhv84kKTMJNXRil3Gy+Nxh4QSMm4shsuXVMcR\nHiLlLAok9IXnsOzagW3IcLL7D1Idp9gtObqInvO7cj4ziVdufZ232r7rl7c61AODwcCQ2sNZ1X8d\nt5Vrw9LjP9B2dnMWHv5edbRi5Y6LJ/OZMRgvXybkdVkc5iuknEW+WefPJejLz3DWqUf6+P+qjlOs\nNE1j8rb3uG/pEAC+6Po1Dzd4TM4t60DF8Jv4rsdC3mj9f9icNkb+NJwHfrqHy1m+O6u03f8Qzpq1\nCJzxOeZtW1THER4g5Szyx+UiZPwraFYrV6ZNh6Ag1YmKjcPlYPTKUby67kXKhJRlYe+ldK18h+pY\nogCMBiMj6j1I4t1raVKmGfMPz6P1rOZsOLdedbTiYbGQ/ubEPxaHuVyqE4kiknIW+WJdvADTieNk\n9R+Mq4pv3s4PICUrmQGL72LmvunUK3ULy/okUj+2gepYopCqRFZjUe9lvNTyNZKzLzNwcR+2n9+q\nOlaxcLRqTdZd/bBs30bgV1+qjiOKSMpZ/DNNI2jye2gGA5lFvKGFNzuaeoRu8zqy5swqulS+g4W9\nlxIXGq86ligik9HEYw2f4KOO08h0ZtB/UW/2XdqrOlaxyHh5HO7QMELGv4zhku8exvcHUs7iH1nW\nrMKyYxv2O3virlJVdZxisf7sb3Sb24HDKYd4pMEoPu88kxBLiOpYwoN6VOvNO+0mk5ydTL9FPTma\nekR1JI9zl40j899jMCYnE/L6K6rjiCKQchb/KHjyuwBkPvaE4iTF45sDs+i7sAdX7FeY2O59Xr51\nHCajSXUsUQwG3jyE12/7L+czk+i3sKdPblhiG/EgzptrEzhzOuYtm1THEYUk5SxuyLxrBwErV2C/\nrQ3Ohr61Z7Rbc/Pmhtd4bPmDBJqDmH3nPIbWvkd1LFHMRtZ/iP80f4lTaSfpu6gH5zPPq47kWdcs\nDhsti8N0SspZ3FDQlPcA35s125w2Hvr5Pt7e8n/cFF6JH+76hTbl26mOJUrIE41G83jDf3Ek5TB3\nL+pFSlay6kge5WjZiqy+/bHs3E7gl5+rjiMKQcpZ/C3jieNY58/DWbsujoSOquN4jMPlYNDivsw/\nPI9mZVuwtE+i3N7RzxgMBl5o8TL31h3J3ku7GbikD+n2NNWxPCp97DjcYeGEvP4qhosXVccRBSTl\nLP5W8EeTMbjdObNmH9p8Y/yGV1h7dg1dKt/B3J6LiAmKUR1JKGAwGHij9Vv0qzGALUmbGfbjQGxO\nm+pYHqOVKUPms//BmJpCyLixquOIApJyFtdluHiRwK9n4KpQkeyed6mO4zE/HlvCB9vfp2pkNT7o\n8AlWk1V1JKGQ0WDkvfYfcEeVHvx6ZjUjlw3D7rKrjuUxtvsewFm7LkFfz8C8aYPqOKIApJzFdQV9\n9gkGmw3bQ4+CxTf2kj6eeozHlz9EoCmQaZ1nEBoQpjqS8AJmo5mPOk0joUIHfj6xjEd/eQCX20cW\nUZnNpL05EUAWh+mMlLP4q4wMgqZ9jDsqCtugYarTeESWM4v7f7qHK/ZUJrR5m9oxdVRHEl7EarLy\neZevaBF3KwuOzGP0ylG4Nd+4P7KzRUuy+g/CsnsngV9MUx1H5JOUs/iLwFkzMCYnY7vvAQjxjY04\nXlo7hh0XtjGw1hAG3jxEdRzhhYItwXx1xzc0iG3I1/tn8NLaMT5zT+j0F1/FHR5ByBuvyeIwnZBy\nFtdyOgn+cDJaUBC2EQ+qTuMR8w59yxd7pnFzdB3eaP2W6jjCi4UFhDO7+zxqRd/MJzs/ZMKm8aoj\neYRWujSZ/3oG45VUAud9ozqOyAcpZ3EN64J5mE6dJGvgELRSpVTHKbJDyQd5KnEUIZZQpnX+kmBL\nsOpIwstFB8bwbfcFVAqvzNub/8uUbe+rjuQRWX37oxmNWBf49v2tfYWUs/iDphE8+T00o5HMhx5T\nnabIMh2ZjFg2lExnBu+0m0S1qOqqIwmdKBNSlrk9FxEfUo5X173IjvPbVEcqMq1MGRy33oZl0waM\nZ3xv21JfI+Us8lgSl2Pes4vsnr1xV6qsOk6RaJrGs6ufYv/lfdxX9356Ve+jOpLQmQphFZnU4SM0\ncl5LvrBALLtHbwCsC+crTiL+iZSzyBOcu1Wn7bEnFScpuq/3zWDOga9pWLoRr7R6XXUcoVOty7el\nd7U+bD2/ha/3zVAdp8iy7+yZc2h74TzVUcQ/kHIWAJi3byVgzSrsbRNw1rtFdZwi2X1xF2PWPE2E\nNZKpt0+XjUZEkbx863hCLKGMWz+Wy1n6vkeyVqoUjtvaYtmyGePJE6rjiBuQchYABE2+eoMLfc+a\n0+xXGLlsGFmuLCZ3+JiK4TepjiR0Li40nmeajuFy1mVeX/+a6jhFlt0z99D2ogWKk4gbkXIWGI8e\nwbp4AY76DXC0aac6TqFpmsaTiY9xNPUIjzV8ks6VuqqOJHzE/fUeomZULWbs/ZxtSVtUxymS7G7d\n0UwmObTt5Qpdzq+//jr9+/dnwIAB7Ny585rH2rdvz6BBgxg6dChDhw4lKSmpyEFF8Qn+MOcGFzad\n3+Bi2q6PWXRkPi3ibuU/zV9SHUf4EIvJwpttJuYtDtPz9p5aTAyONu2wbNuK8fgx1XHE3yhUOW/c\nuJETJ04wZ84cxo8fz/jxf71Qf+rUqcyYMYMZM2ZQpkyZIgcVxcNw/jyBs2fiuqkS2Xf2VB2n0LYk\nbWLsb89TKqgUH3f6DLPRrDqS8DGtyrXmrur92H5hG1/t+1J1nCK5ejMbWbXtvQpVzuvWraNjx5z7\n+1atWpXU1FTS09M9GkyUjKBpH2HIzibz4cfBrM9C0zSN0SufwOl28mHHacSFxquOJHzUy7eOI9QS\nxvj1L3PJpt/FYdld70Azm7G8hP3XAAAgAElEQVQulA1JvFWhyvnixYtERUXlfRwdHc2FCxeu+Zyx\nY8cycOBA3nrrLZ/Zn9bXGNLTCPrsU9wxMWQNGKw6TqGtOPkzey/tpnf1PrStkKA6jvBhZUPi+Hez\nMSRnJ/P6hldUxyk0LSoae9sELDu3Yzx6RHUccR0emSr9b/mOGjWK1q1bExERwaOPPsqyZcvo0qXL\nDb9HVFQwZrPJE3GKVWysD91mcOankJoCr75K7E3ed+ohv2P98Q+TAXix/fO+9fyUIBm3/Hsu4Wm+\nOfQ1M/dO59GWD9G8fPMCfb3XjPXQwbD8Z2KW/wDN/6M6jcd5zTgXUqHKuXTp0lz8051Nzp8/T2xs\nbN7HvXr1yvt7mzZtOHjw4D+Wc3JyZmGilKjY2DAuXEhTHcMzNI3ot9/BGBzMpbuHonnZ/6/8jvXW\npM2sPL6SdhXaU85U1XeenxLkU6/rEjL+1v+j5/yuPLjwYZb2WYHJmL+JhTeNtaFVe2IsFlxfzyb5\n/sdVx/EobxrnG7nRLxCFOqzdqlUrli1bBsCePXsoXbo0oaGhAKSlpTFixAjsdjsAmzZtonp12dPY\n2xiPHcV0+hTZt3dBi45RHafQJm/LuT778Yb/UpxE+JOW8a3oW6M/Oy5sY8beL1THKRQtIhJ7QgfM\ne3ZhOnxIdRzxPwpVzo0aNaJOnToMGDCAcePGMXbsWObNm8fPP/9MWFgYbdq0ybvMKjo6+h9nzaLk\nWbZsAsDZpJniJIV3JOUQS44u5JbYhtxWro3qOMLPjL11HGEB4by+4RUu2vR5j+Q/9tqWhWHeptDn\nnJ9++ulrPq5Vq1be34cPH87w4cMLn0oUO8vmjQA4dFzOH2yfjIbG4w2fxKDj67OFPpUJLsNzzZ7n\n+V+fZfz6l3knYbLqSAVm73oHmtWKdcE8Mp/6t+o44k9khzA/Zd6yGc1qxVm3vuoohZKUmcQ3B77m\npvBK3FGlh+o4wk/dW/d+asfU5at9X7L5942q4xSYFhaOPaEj5n17MR3YrzqO+BMpZ3+UmYl5z66c\nG1wEBKhOUyif7vyIbFc2jzQYle/FOEJ4mtlo5s02EwF4dvVoXd5WMm+vbTm07VWknP2QZcc2DC6X\nbg9pp9vT+Hz3p5QKKsWAWvq9Plv4hhZxLbmrel92XdzBxnPrVccpMHvnrmiBgVLOXkbK2Q+ZN+cs\nBnM0aao4SeF8ufcLrthTGVnvIYLMQarjCMHAWkMBmH94ruIkBaeFhmHvcDvmA/sx7d+nOo7IJeXs\nh/JWajfWXznbXXY+3jGFYHMI99YdqTqOEEDOvtsxgTEsOrJAlzfFyDu0PV9/v1z4Kilnf6NpmDdv\nxBUXj7tcedVpCmzeoW85l3GWobWHExUYrTqOEEDOuec7qvTkgu0868/9pjpOgWV37IwWFJRzaFu2\nW/YKUs5+xnj6FKbzSbqcNbs1N1O2vYfZaObBWx5VHUeIa/SsljP7nH9Yh/dJDg3F3rEz5sOHMO3d\nozqNQMrZ71w9pO3QYTn/cmIZB5L307taX8qHVVAdR4hrtIxvRamgWJYcXYDT7VQdp8Cyel29jaQO\nf7nwQVLOfsas481HJm17F4BHGz6hOIkQf2U2muletScXbRf57eyvquMUmL3D7WjBwVjnz5ND215A\nytnPWLZsQjObcda/RXWUAtl4bgMbzq2jY8XbqR1TR3UcIa6rZ9Wc2eeCwzq8LCk4mOzbu2A+dhTz\n7p2q0/g9KWd/kpWFeecOnHXrQZC+LkGavD1n1vxYwycVJxHi7zWPa0np4DIsOboAh8uhOk6BZffI\nPbS9QIe/XPgYKWc/Yt61A4PDobtD2un2NH46/iP1YxvQMr6V6jhC/C2T0UT3qj25nHWZX8+sVh2n\nwOzt2gNg3rldcRIh5exH9Hp989bzW3BrbtqWT5AbXAiv17NaHwAWHtHh7DM0FHdEJMZzZ1Un8XtS\nzn4kb2cwnZXzlt9zcjcuo6/cwj81K9ucsiFxLDm6UJeHtt3x8RjPnVMdw+9JOfsRy5ZNuEvF4r6p\nkuooBbIlKbecy0o5C+9nNBjpUbUXKdkprD6dqDpOgbnj4jFeScWQnqY6il+TcvYTxnNnMZ05nbOf\nto4ODWuaxpakTVQMu4kywWVUxxEiX3pcXbWtw0PbrvhyADJ7VkzK2U/o9ZD2sStHuZR1icZlmqiO\nIkS+NSnblHKh5fnh6GLsLrvqOAXijosHwHj2jOIk/k3K2U/kLQbT2Urtq+ebm5TVV27h34wGI92r\n9uKKPZVVp1aojlMg7ryZsywKU0nK2U9YtmxCMxpx3NJQdZQC2ZyUs6OZLAYTeqPXvbZdcXEAmKSc\nlZJy9gd2O+Yd23DWrguhoarTFMiWpM1YTVbqlqqvOooQBdKodBMqhFVk6fEfyHJmqY6Tb+643Jnz\nWSlnlaSc/YB5724MWVm6u745w5HBnou7qB/bgABTgOo4QhSIwWCgR9XepNmvsOb0StVx8s0dn3vO\n+Zycc1ZJytkP5N3sorG+FlXtvLAdl+aSQ9pCt66+dg+nHFacJP+08Ai04BCZOSsm5ewHLLkrtZ1N\n9bWoanPu9c1NpJyFTsWH5sxCz2XoqOgMBlzx8Zhk5qyUlLMfsGzZhDsyEleVaqqjFMjm33Nm/LJS\nW+hVfGjO+dtz6ToqZ3LOOxsvXYIs/Zwr9zVSzj7OcOECphPHc65v1uHmI3Eh8XlvcELoTWxQaUwG\nE2cz9DULzTvv/LtsRKKKlLOPM+/aAYCzQSPFSQrmZOpJzmcmyflmoWsmo4myIXG6mzm7cjcikcup\n1JFy9nEGR87G+1pYuOIkBbPu9DpADmkL/YsLief3zHO43C7VUfJNdglTT8pZeKX1p9cDsvmI0L+4\n0HicbicXbRdUR8m3vF3CZMW2MlLOwiutO70Os9FM/dhbVEcRokjiQ/S3YluudVZPyll4nSxnFtvO\nbaNeqfoEmYNUxxGiSOJyFzSe1dF5Z1fuLmEmuTOVMlLOwuscTjmEw+2gfqy+9gEX4nr+mDnrZxaq\nxcSgBQTIzFkhKWfhdVxuJ4DMmoVP0OPMGYMBd9l4OeeskJSzEEIUo7iQnLs8nU3X1yzUFR+PMel3\nyL3iQ5QsKWchhChGZXPLWU8LwiBnUZhB0zCeT1IdxS9JOQshRDEKMAUQG1Raf+Wcd+tIfc34fYWU\nsxBCFLP40HKcSz+Lpmmqo+SbbOGplpSzEEIUs7jQeLJcWVy2XVYdJd/yLqeSmbMShS7n119/nf79\n+zNgwAB27tx5zWO//fYbffv2pX///kyZMqXIIYUQQs+uXk51+sppxUnyL2/mLCu2lShUOW/cuJET\nJ04wZ84cxo8fz/jx4695fNy4cUyaNIlZs2axdu1aDh/Wz43GhRDC0+L0WM5xskuYSoUq53Xr1tGx\nY0cAqlatSmpqKunp6QCcOnWKiIgI4uLiMBqNtG3blnXr1nkusRBC6ExscGkANp7ZqDhJ/rlLlwEg\ncP48xUn8k7kwX3Tx4kXq1KmT93F0dDQXLlwgNDSUCxcuEB0dfc1jp06d+sfvGRUVjNlsKkycEhUb\nG6Y6QsFE5GzkERpqJVQn2aMcIQAEBwXob7x1Ssa5eGUfzJm8LDiwgFcSXlGcpuD0+PrQY+Y/K1Q5\n/y9PrEBMTs70QJLiFRsbxoULaapjFEhAqo0IID09G5tOsicnZwCQabPrbrz1SI+va70xOqwAjG45\nWj9jnZlJLOBo1oIUvWTOpZfX9I1+gSjUYe3SpUtz8eLFvI/Pnz9PbGzsdR9LSkqidOnShfkxQgjh\nE87l7g5WIaKC4iT5Z/o9ZyGYs1p1xUn8U6HKuVWrVixbtgyAPXv2ULp0aUJDQwEoX7486enpnD59\nGqfTSWJiIq1atfJcYiGE0JmzuRuQlA8vrzhJ/l1dpe0uG6c4iX8q1GHtRo0aUadOHQYMGIDBYGDs\n2LHMmzePsLAwOnXqxMsvv8zo0aMB6NatG5UrV/ZoaCGE0JOrN70oF1aO9BSn4jT5c3VnMHd8OcVJ\n/FOhzzk//fTT13xcq1atvL83bdqUOXPmFD6VEEL4kHPpZ4iyRhFkCSId7z8XCmA8lztzzr3eWZQs\n2SFMCCGK2bmMc3m3jtSLqzuDXd0pTJQsKWchhChGafYrpDvS8nYJ0wvjuZw9tWXmrIaUsxBCFKOr\n55v1NnM2njuLFhSEFhmlOopfknIWQohidDb3Mqr4UH3NQE1nz+AqGwcGg+oofknKWXidCGskAL/r\n7P63QlzP1fs4x+npsLbdjvHCeVmprZCUs/A6N4VXolRwKbYkbVYdRYgiuzpz1lM5X72H89WbX4iS\nJ+UsvI7BYKBF+RacSjtJUsbvquMIUSTnMnKKLl5H55zzNiCRmbMyUs7CK7Uo1wKAzUmbFCcRomjO\n6fCc89WtO10yc1ZGytlfeODmJCWpZYWWAGyRchY6dzbjLKGWMMICwlVHyTeZOasn5ezj3DExAJhO\nn1ScpGCaxjfFgEHKWejeufQzupo1AxjP5W7dGSf7aqsi5ezjnPVuQQsIwLxFXyUXZg2jVnRttp/f\nisPlUB1HiEKxOW0kZydTVkeLwQBMZ68e1paZsypSzr7OasVZrz7m3bvAZlOdpkCalG2GzWlj3+U9\nqqMIUShXL6PS3cz57Bk0sxkt91bAouRJOfsBR5NmGJxOzDu2q45SIE3KNAVkUZjQr3O5u4Ppb+vO\nszmXURmlIlSRkfcDzsY5JWfR2aHtxlfL+feNipMIUTin0nLWeujqsLbLhTHpd7nGWTEpZz/guFrO\nm/VVctWiqhNhjZRFYUK3fj6xDICmZZsrTpJ/xgvnMbhcuOSGF0pJOfsBd/kKuMqUxbx5o64uqTIa\njDQq3ZhjqUe5ZLukOo4QBZLuSOeXE8uoHlmD2jF1VMfJN2PurSLdZaWcVZJy9gcGA87GTTEl/Z73\nH55eNCnbDIAtSfqa9Qvx8/Gl2Jw2elTrjUFHN4/44xpnKWeVpJz9hF4PbV897yyHtoXeLDj8PQA9\nq92lOEnBmHKvcXbJBiRKSTn7CWfTnBmoebO+Sq5R6cYAbJabYAgdSbensfzkT9SMqkWt6JtVxymQ\nvJmzLAhTSsrZTzjqN0AzmXS3YjsyMIoaUTXZmrQZl9ulOo4Q+bLs+I9ku7J1N2uGP+0OJjNnpaSc\n/UVwMM469TDv3A7Z2arTFEjjMk3JcKRzIHm/6ihC5MuCw/MA6FG1t+IkBWc8dw7NYMBduozqKH5N\nytmPOJs0xWC3Y969U3WUApHzzkJPrmSnsuLkL9wcXYca0TVVxykw09kzOcVssaiO4teknP2IQ6eb\nkVxdsS2bkQg9WHr8B+xuO710eEgbTcvZHUxWaisn5exHHE2uLgrTV8nVjKpFdGA0y47/QKYjU3Uc\nIW5oYe4q7R7VeilOUnDGUycx2O2448urjuL3pJz9iLtSZdwxMVi26Gvls8lo4p46I7icdZlZ+2eq\njiPE30rNTiHx1HLqlqpP1cjqquMUmHXJIgDsCR0UJxFSzv7EYMDRuCmmUycxJv2uOk2BjKj3EIGm\nQD7cPgmn26k6jhDX9eOxJTjcDnrqcCEYgHXBXDSTiexu3VVH8XtSzn7G2USf1zvHBscyoNZgTqad\nYNGR+arjCHFdeau0q+mvnI0nT2DZugXHbW3QSpVSHcfvSTn7Gb0uCgN4uMHjGA1GJm17F01He4QL\n/5CcdZlVpxO5JbYhlSOqqI5TYNaFOb/0ZvfU4UI2HyTl7GecDRuhGY2YdVjOlSOq0L1KL3Zf3Mmq\n04mq4whxjR+PLcHpdupy1gxgXTgPzWwmu9udqqMIpJz9jhYahqtWbSzbt4LDoTpOgT3W8AkAJm17\nV3ESIa41//BcAHpU1eEq7WNHsWzfhqNNO7ToGNVxBFLOfsnRuCkGmw3zvj2qoxTYLaUb0rp8O9ac\nXsmO89tUxxECgEu2S6w5vYpGpRtzU3gl1XEKzLoo55B2lhzS9hpSzn7IodObYFz1WIOc2fPkbe8p\nTiJEjh+OLcKlueihx41HAOuC79EsFuxd71AdReSScvZDTp3ePvKqdhXaU7dUfRYdnc+x1KOq4wg/\nZ3fZ+XjHFAwYdHlI23T0MJZdO7C3a48WGaU6jsgl5eyHXFWr4Y6I1OWiMACDwcBjDZ/Arbn5cPsk\n1XGEn/tk54ccTD7A8Dr3UT6sguo4BWZdkLOjWXYPfS5k81VSzv7IaMTZuAnmY0cxXLyoOk2h9Kja\nm4phNzF7/1dcyLygOo7wU2fTz/DWpjeJCYxhTPMXVccpFOuC79ECArB36aY6ivgTKWc/lXe981Z9\nzp7NRjMPN3iMLFcW03Z9pDqO8FNj1z5PpjODF1u+SlRgtOo4BWY6dBDz3t3YEzqgRUSqjiP+pFDl\n7HA4GD16NAMHDmTIkCGcOnXqL59Tp04dhg4dmvfH5XIVOazwnKvlrNdD2wADag0hOjCaz3ZPJd2R\nrjqO8DOrTiWy4Mg8GpdpyoBag1XHKRTrwtxD2rJK2+sUqpwXL15MeHg4s2bN4qGHHmLixIl/+ZzQ\n0FBmzJiR98dkMhU5rPAcZ+MmAAT8ukZxksILsYQwot6DpGSn8NXe6arjCD9id9kZs+ZpjAYjE9pM\nxGjQ50FI64J5aFYr9s5dVUcR/6NQr6h169bRqVMnAG699Va2bt3q0VCi+GkRkdjbJmDZtAHzti2q\n4xTafXUfIMgcxEc7puBw6W9TFaFPH+2YwuGUQ9xTZwT1YxuojlMopv37MO/fh719J7SwcNVxxP8o\nVDlfvHiR6Oic8ytGoxGDwYDdbr/mc+x2O6NHj2bAgAF8/vnnRU8qPC7zsScBCJryvuIkhRcTFMPg\nm4dxJv003x/+TnUc4QfOpJ3m7c0TKBVUiueavaA6TqH9cUhbVml7I/M/fcK3337Lt99+e82/7dix\n45qPr3cTgn//+9/06NEDg8HAkCFDaNKkCfXq1fvbnxMVFYzZ7P2HvmNjw1RH8Jw+3aFRIwIXLyAw\nNQmqVVOd6Br5Hevn2z/H57s/5cOd7/NAy3uxmCzFnMz3+NTrupg9svIlMp2ZTLljCtUrVCzw13vF\nWGsaLFkAgYGED74bQkNVJ/I4rxjnIvjHcu7Xrx/9+vW75t+ee+45Lly4QK1atXA4HGiaRkBAwDWf\nM3DgwLy/t2jRgoMHD96wnJOTMwuavcTFxoZx4UKa6hgeZX3occIfuBfbuDdJ/793VMfJU5CxDiGG\n/jUH8fX+GTyxaDSvtBpfzOl8iy++rotL4snlfLf3O5qWbU7X+N4FHjdvGWvT3j1E79tH9p09uWLT\nwKY+kyd5yzj/kxv9AlGow9qtWrVi6dKlACQmJtK8efNrHj969CijR49G0zScTidbt26levXqhflR\nophl39kT102VCJw9E8P586rjFNq4296kamQ1PtwxiR+PLVEdR/igbFc2//n1GYwGI2/qeBEY5NyB\nCuSQtjcr1KurW7duuN1uBg4cyFdffcXo0aMB+OSTT9i2bRtVqlShbNmy9O3bl4EDB9K2bVvq16/v\n0eDCQ8xmMh9+HEN2NkHT9Hu9cGhAGNM6zyDQFMjjyx/ieOox1ZGEj/lo+2SOpBzmvrr3U6+Ujt/P\nNC1n45GgILI7dladRvwNg+Yld63XyyEIPeQssMxMYhrXAaeLy9v2oIWqP1dT2LGetW8mTyQ+Qv3Y\nBizu/ROB5sBiSOdbfPZ17UGn007RalYTQiyhrBu0hQhr4Tbs8IaxNu3aSXSH28jq0Zu0T33zEkRv\nGOf88PhhbeFjgoOxjXwIY2oKgTP1/R/rwJuHMLDWEHZe2M5La8eojiN8xItrx2Bz2hjb8rVCF7O3\nCJSNR3RBylkAYLt3JFpwMEEfTQGHvq8XfqP1W9wcXYcv9kxj3qFv//kLhLiBFSd/ZsnRhTSPa8nd\nNQf+8xd4M03L2XgkOAR7h06q04gbkHIWAGjRMdiGDMd09gzWefoutGBLMNM6f0mIJZSnEkdxKPmg\n6khCp7KcWTy3+mlMBhNvtp6IwWBQHalIzLt2YDp+jOzOXSA4WHUccQNSziKP7cFH0Uwmgqe8l3Md\npI5Vi6rOO+0mkenMYMSyoWQ4MlRHEjr0/ta3OX7lGCPqPUCdUnVVxyky6/zcVdo95JC2t5NyFnnc\nFSqS3bsv5v37CPhlmeo4Rdareh/uq3s/+y/v49nVT113sxwh/s7s/V/x1uY3KRsSx7+b/kd1nKLT\nNKwLv8cdEiqHtHVAyllcI/PRJwAImvye4iSe8Uqr12kQ25BvDszi630zVMcROrHoyHyeTHyUKGsU\nc+78nnBrhOpIRWbevhXTyRM5920OlKsYvJ2Us7iGq05dsjt0ImDdWsybN6qOU2RWk5WpnacTYY1k\nzJqn2X1xl+pIwsv9cmIZD/08gmBzCLPvnMfNMbVVR/KIoA8nAZDdq4/iJCI/pJzFX9hyb4gR7COz\n55vCKzG5w8dkubIYuWwYafYrqiMJL/XbmV+5b+lQTAYTX93xDQ3LNFYdySMsa1YROH8ejkaNsXeS\njUf0QMpZ/IXj1ttwNGpMwI+LMR0+pDqOR3Su1JXHGj7J0dQjPJn4mJx/Fn+xNWkzg3+4G5fm4ouu\nX9EyvpXqSJ5htxM65mk0g4H0CW+DUd729UCeJfFXBgOZjz6JQdMI+kC/t5P8X2OavUjzuJYsOjKf\nabs+Vh1HeJG9l/YwYPFd2JyZfNTpM9pX9J0FU0GffIj54AGyht+H85aGquOIfJJyFtdl73YnzipV\nCfxmFsak31XH8QiLycInnT6nVFApxv72PFuSNqmOJLzA0ZTD9FvYk5TsFN5NmEL3qj1VR/IY49kz\nhLz1Ju6YGDLGvKg6jigAKWdxfSYTtkdGYbDbCfrkQ9VpPCYuNJ4PO07D6XYy9IcBbE3arDqSUOh0\n2in6LOzBBdt53mj9FgNqDVYdyaNCxj6PITODjBdfRYuKVh1HFICUs/hbWXcPxB1bmsAvpmFI851F\nVG0rJPBmm4lczrpEr/ndWHRkvupIQoGkzCT6LOzOmfTTvNDiZUbUe0B1JI+yrEokcME8HI2bkjXA\nt37p8AdSzuLvBQaS+cDDGNOuEDj9c9VpPOreuiOZ0XU2JqOZEcuG8d6WibJIzI8kZ13m7oW9OJZ6\nlCcbPc2oRk+pjuRZVxeBGY2kT5goi8B0SJ4xcUNZw+/DHRJK0CcfQHa26jge1alSFxb3/olyoeUZ\nv+EVRq14GLvLrjqWKGbp9jQGLL6LfZf3MLLeg4xp7nvnYoM+moL58CGy7hmBs34D1XFEIUg5ixvS\nIqPIGnYvpt/P6f6GGNdTp1RdlvZZQcPSjZhz4Gv6LerJ5axLqmOJYpLpyGTID/3Zdn4rA2oNZtxt\nE3R/M4v/ZTxzmpC3J+AuVYqM515QHUcUkpSz+Ee2Bx9Bs1gInvwuuN2q43hcmZCyfN/zB+6s0pN1\nZ9fSdW4HjqT4xvXd4g92l50Ry4by29lf6V61F2+3m4TR4HtvgaEvjsGQmUn6S6+hRUapjiMKyfde\nmcLj3PHlyO5zN+ZDBwn4aanqOMUi2BLMp52n80Sj0RxLPUrXuR1Ye2aN6ljCQ+wuOw//MpLlJ3+m\nQ8VOfNjxU8xGs+pYHmdZ8QvWxQtwNG1O9t06v/e0n5NyFvly9YYYwZPeUZyk+BgNRp5vMZb3Ej4g\nw5FBv0U9mbVvpupYooh2X9zF7d+1Y9GR+dwafxufdZlJgClAdSzPy84m9D/PoBmNpMlOYLonz57I\nF1fNWmR37opl0wass79SHadYDbx5CN92X0CoJZQnEh9h3LqXcWu+dzjf1zndTt7e/F86f9eOvZd2\nM7T2vcy84xuCzEGqoxWL4A8nYT56BNuIB3DVrac6jigig+Yl149cuJCmOsI/io0N00XO4mI8foyo\njm0wOOwk/7gCV+06xfazvGGsj6QcYvCSuzmaeoQ7q/RkcoePCbYEK81UHLxhrD3twOX9PL78QbZf\n2EZcSDzvJEzyii05i2usjadOEn1bU7TQMC7/thktItLjP0NP9PKajo0N+9vHZOYs8s1dqTJpkz7C\nYLMRPnIYhnTvf/EXRdXI6vzQ5xdujb+NxUcX0Gt+V5IyfGMrU1/lcrv4YPskOn7bmu0XtnF3zYGs\nHrDeK4q5OIW+OAaDzUb62Nf8vph9hZSzKBB71zvIfPhxzIcPETp6FHjHgZdiEx0Ywzfd5zOg1mC2\nX9hGl7nt5Z7QXupo6hF6zu/Ky789T1hAONO7zmJyh4+JsPp2WQUs/wnrD4twNG9Jdr8BquMID5Fy\nFgWW8cLLOJo2J/D7uQR+/qnqOMUuwBTAewkf8EKLlzmTfpru33dm4eHvZUcxL+HW3Ezb9Qnt57Ri\n4+/r6V61F2sGbKRr5TtURyt+WVmEjnkGzWQi7c2J4GPXbPszKWdRcBYLV6Z+gTsmhtCXxmDevlV1\nomJnMBgY1egppnX+EpfbycifhtP9+86sP/ub6mh+7XTaKfot6sWYNU9jNVn5uNNnfHr7dGKCYlRH\nKxHBH7yP6fgxbCMfxFWnruo4woOknEWhuOPLceWDT8HhIHzkcAwpyaojlYjuVXvxc7/VdKl8Bxt/\nX0+P+V0YtLivHOouYZqm8fW+GbSZ3YI1p1dy+01dWD1gA72r9/W5Hb/+jvHkCYLffQtX6TJkPjNG\ndRzhYVLOotAcCR3IfOrfmE6eIGzUwz5//vmqmtG1+LLrLJbc9TO3xt/GLyd/ov03rXjo5xEcSz2q\nOp7P+z3jHIOX9OPJxEcxGAy8l/ABM7rNoUxIWdXRSlToC89hyMoi4+VxaOERquMID5NyFkWS+fRz\n2Fu3w7r0B4I+mKQ6TolqWrY53/dcwuw751Gv1C3MO/QtrWY14d+r/iWruouBpmnMPfgNbWY355eT\nP9GmfAKr+q9j4M1D/Ga2fFXAz0uxLl2CvWUrsvvcrTqOKAZSzqJoTCaufPgprjJlCRk3FvP6daoT\nlSiDwUD7ih35ud8qPsomFZgAABh+SURBVOn0ORXDbuKLPdNo9tUtjF//CqnZKaoj+oQTV44zYtkw\nHv5lJHaXnQlt3ubb7vMpH1ZBdbSSl5VF6H/+jWYykS6LwHyWlLMoMq10adI+ybnfc/gD92C4cEFx\nopJnNBjpVb0PawZs5K227xFhjeS9rRNpMrM+7299h0xHpuqIuuNwOVh0ZAF3L+pF05n1WXx0Ac3j\nWpLY/zfurTvS72bLVwVPfhfTiePY7n8Y1821VccRxUR2CCsAvew6o0rQ++8QOm4s9jYJpM6ZByZT\nob+X3sfa5rQxbdcnvL91IinZKZQJLsvTTZ9jUK2hWEwW1fGu4W1jfSz1KF/t/ZJZ+2dywXYegOZx\nLRlW+17uqt4Pk7HwryvVijrWxuPHiG7THHdEJMm/bUYLC/dgOt/hba/pv3OjHcKknAtAL0+4Mm43\n4cMGYP1pKRnPjCnSClJfGevU7BSmbHufT3Z+QKYzk8oRVXiu2Qv0rHaX19yu0BvG2u6ys/TYEr7c\n+wWrTycCEGmNpH/NQQypfQ81o2spzecpRRrr9HQi+/XEsmUTVz6aRvZd/Twbzod4w2s6P6ScPUQv\nT7hKhuTLRHVsg/H0KVK/mY+jbUKhvo+vjXVSZhLvbP4vX+79HKfbSd1S9Xm22fMkVOig/A5JKsf6\naMphZu77ktn7Z3LRdhGAlvGtGFr7Hu6s0pNAc6CSXMWl0GOdlUXE4H4ErFlFVt/+pE35RM4134Be\n3j+knD1EL0+4auatm4ns3hktIoLk5b/ijosv8Pfw1bE+nnqM/256nbkHv0FDI9gcwm3lWpNQsQMJ\nFTpQOaJqiZ9LLemxznZl8+PRxXy593N+PbMagOjAaO6uOYihte+helSNEstS0go11g4H4fcNwbrs\nR7K73smVaV+C2ffuRe1Jenn/kHL2EL084d4gcNrHhI15BkfzlqTMWwyWgp1n9fWx3nNxN1/v+5LE\nU8s5nHIo798rhlcioUJOUbcu34awgOI/p1hSY30k5RAz9k5nzv6vuJR1CYBW8a0ZWuceulXu7nOz\n5Osp8Fi7XIQ9MpLA7+dib5tA6sxvwGotvoA+Qi/vH1LOHqKXJ9wraBph999D4MLvyXzsSTJeerVA\nX+5PY30q7SSJJ5eTeGo5a06v4oo9FQCz0UzTss3zyrpe7C3Fcp66OMc63Z7GTyeW8uWez/nt7K8A\nxATGMKDWEIbUHkbVyOrF8nO9VYHGWtMIHT2KoJnTcTRrQcqc7yEkpHgD+gi9vH8USzlv3LiRJ554\ngtdff52EhL+eV1y4cCHTp0/HaDRy991306/fjRcv6GUg9ZDTWxjSrhDZqS3mo0dI/XI29i7d8v21\n/jrWTreTLUmbSTz1CytPLmfb+a1o5PwnWiqoFG3KJ5BQoQPtKnagTHAZj/xMT4x1SlYyB5MPcjB5\nPweS93Pw8n4OJh/gTPrpvM9pXa4tw+rcS5fKd2A1+efsL99jrWmEvDSG4I8/wFG/AanzFskuYAWg\nl/cPj5fzyZMneeONNzAajfTt2/cv5ZyZmUnv3r357rvvsFgs9O3bl5kzZxIZ+fe3btPLQOohpzcx\n7dlNVNf2aNZAkn9ZjfumSvn6OhnrHJezLrH61EpWnPqFladW8HvGubzH6sTUyztX3SyuRaELryBj\nfcl2KaeAL+/PLeIDHLy8n6TMv+6IFhcST42omjQs3ZgBtQZRJbJaofL5kvyOdfCE8YRMnICzZi1S\n5v+IFuMfN/LwFL28f9yonAu1qiA2NpbJkyfz/PPPX/fxHTt2UK9ePcLCcn5wo0aN2Lp1K+3bt///\n9u48PKrCXuP498yWTDKTZWICgkutQqJUChEslAYIBJCCLEJYFBBQWy0FF1osuLXScoUrVCRYQNkE\nhBhaLoobBZICVyAgqIglQWJBsRUCWSaZJJNZ+kcgGIFAQpKz5Pd5nnkmszGvvxnnnXPmzJn63J3Q\nMX+7H1Hywlycj00i4qH7KXx7s3xmVgeu0BiGtBnGkDbDCAaD/PPM59WrwPf8+0MOnT5I2oGXAAiz\nhBFudeC0OXHaInDanDhsTpxWZ9Xf545tzhrXuaGyJZWlCg5bBE6rE7vFzsmyk2eXfs8VcQ65BYer\nt6j+ruudN9D7hj60jU4g3pVA2+h42kbHExEiS3r1YV/4MuFzZ+O/8QcUZWyUYm6m6lXOdru91svz\n8/NxuVzVp10uF6ea4V6jRJXye8di3f0hoevW4HhuRtUuB0WdKYrCbTHtuC2mHZM6TsFT6WHXNzvJ\n/Gorn58+RInXjbvSjdvr5j+l/8bjq99eyUyKiUAwUPO+Ubgx4gfc0aIzbaOrCjjelcAt0W1xWB0N\n8Z8ngNCVy3D84Wn817aicP1bBFpeq3YkoZLLlnNGRgYZGRk1zps8eTJJSUlXfCdXsuY8OjoMi0X7\ne/6pbTWEqMXSJfDZJ9iXvYq9b28YOfKyN5FZX46TG1sNY1SnYRe91Bfw4a5wU1xRTHFFMW7v+b8v\ndvju5S3CW3Bb7G3Vh/iYeOzW2t+Uiytzyef16tUw7XGIjcW8bSsxCcbY8Ypa9P76cdlyTk1NvezG\nXN8XFxdHfv751V8nT56kQ4cOtd6moED7+x7Wy+cYWmVespKoPj3ggQcpvKEN/lsuvaWuzLqhWAjD\nRZjJRctQ4CLfVrqSWZcU+ihBHo+rdalZ297dRMQD4wk6IyhctwF/TGuQ53+96eX1o7Y3EI2y/8Af\n//jHHDx4kOLiYkpLS9m/fz+dOnVqjLsSOuK/pQ0lf16AqbSEiHGjMH11XO1IQqjOmrWNiF+Mh5BQ\nitaux397e7UjCQ2oVzlnZWUxduxYduzYwbx585g4cSIAS5Ys4cCBA4SGhjJ16lQeeOABJkyYwKRJ\nk6o3DhPNW8WQYXgmP47liyNE39ULy0d71Y4khGosu3cRef9oUBSKXl+Lr/NP1I4kNEJ2QlIHellV\nogehry3C8fTvwGbDvWARFYPvqXG5zLrpyKybzndnbfnkAJH33I1S5qF4+Rq8/fqrnM449PKcbvLV\n2kJcTvmDD1O8Op2g2ULEQ+MJe+lF0Mb7RCEanTnnMJEjh6KUuHEvXCLFLC4g5SxU403pR+Gmzfhb\nX0f4rOdxTnkEKirUjiVEozJ9mUfk8EGYzpyhZN4CKoYOVzuS0CApZ6Eqf7sfUfB+JpWJdxCa/gaR\nqYNRzpxWO5YQjePrr4lKHYz52/9QMvN/KL9vnNqJhEZJOQvVBVu0oHDDu5QPGopt94dE9e8NOTlq\nxxKiQSmnTkFKCubjxyh98inKfjlJ7UhCw6SchTbY7biXLKf0sd9g+TIPunTBunO72qmEaBBKYQFR\nI4ZATg6eX03B88Q0tSMJjZNyFtphMuGZ8SzFL/8FSkuJHDGE0DdWqZ1KiKtTUkLk6OFYDh2Ehx+m\n9LmZoChqpxIaJ+UsNKdi1H3w978TdDpxPjaJ8OefhUDg8jcUQmvKy4m8fzTWj/ZSPmwELFwoxSyu\niJSz0KYePSh8byu+m28hLO0lIh4YBx7t7+JViHOUb78lcsxIbDv+QUX/gbgXLAKTvOSKKyPPFKFZ\n/h/eQuG7W/B2SyLknbeIGtIf07cX/m6wEFoT8n9/xdX9TmzbM6lI6UvxkuVgqdePAIpmSspZaFow\n2kVR+gbKRo/B+vEBovolY/7soNqxhLgo5fRpnA+NJ+IXE1DKy3HPmkPx6jflN8xFnUk5C+2z2Sh5\naSElT/8B8zcniB7YF9vm99ROJUQNtvffxdX9J4Ru/BuVne6kIPP/KX/wYVmVLepFnjVCHxSFsimP\nU7R0FQQDRIwbjX3xQtnlp1CdUlSIc/LDRI4bhVJUSMkzz1P49gf4f3iL2tGEjkk5C13x3j2Ywo3v\nEbgmFscz03E8+QT4fGrHEs2UNXMr0T26Epr+BpXtO1CwZQdlkx8Ds1ntaELnpJyF7vg6JFL4QSa+\ndrdjX7GUyHuHoxQXqR1LNCclJTh++zhRI4diOvktpdNmUPjeVvwJt6qdTBiElLPQpUDr6yh8+30q\n+vTDlrWNqAF9MB37l9qxRDNg/XAnrp4/xb5yKb6EWyl8fxue3/wOrFa1owkDkXIWuhV0OCl+fR2e\nX/4KS85hovv3wrJ3j9qxhFGVlRH+zO+IHDoA09fH8Ux5goK/b8fXvoPayYQBSTkLfTObKZ35Au7Z\n81AKCoi6ZyBhs/+E4i5WO5kwEMtHe4nu/TPCFr+C/4c3U7hpM6VP/16+IiUajZSzMITyCQ9StCaD\nYEQk4XNn4+rcHvuiNCgvVzua0LOKCsL/9AeiBvTB8sURPL94hIKtO/F1ulPtZMLgpJyFYVT2SuF0\n9ieUzngWKn04np2Bq2ti1Y9nyBbdoo7MBz8lum9PwubPJXDd9RRueIfSP86GsDC1o4lmQMpZGEt4\nOJ7HfsOZvZ/gmfQoptP5OB+bRHSPLtg2vSXfixaXV1lJ2NzZRPfrieWfhygbN5GCrA+p7JakdjLR\njEg5C0MKumIofW4mZ/Z8TNnYCZjzjhI5cQxRdyVj3Z6ldjyhUeacw0T9PIXw2X8iEBtH4bq/UvLi\nSwQdTrWjiWZGylkYWuDaVpTMnU/BzmzKB9+D9cB+ooYPInL4YCwHPlI7ntAKvx972nyiU5KwfnKA\n8hGjKdi+m8pefdROJpopKWfRLPhvboP71RUUbNmON7k3tu2ZRPdLJmLiWMxHctWOJ1RkyjtK1KC7\ncDz/DEFnBEUr1+JOW0wwMkrtaKIZk3IWzYqvfQeK0jdQuOEdKu/oTMimjUQn3Ynj8V9jOvG12vFE\nU6qoIPS1Rbh6dcO6dw/lg4ZyZkc23v4D1E4mhJSzaJ4quyVR+O4Wilauxd+mLfY1r+Pq0pHwZ2eg\nnD6tdjzRiMxHjxD++6eJ6ZCAc8Y0giEhFC9Zjvu1lQRjYtSOJwQg5SyaM0XB238ABVm7KH75LwRi\n4whblIarc3vCXnwBpcStdkLRUCoqCPlbBpFDB+Dqegdhr7wMgOeRyRRs30PFkGEqBxSiJiUY1MZ3\nS06d0v4LYWysUxc5jUCVWVdUYH99GWF//l9M+fkErrkGz+O/pWzcREPvCcrIz2vzkVxCV60g9M03\nMJ05A4A3qQflY8dT0X9gkz+uRp61luhlzrGxl/4WgCw5C3FOSAhlDz3CmexPKJ02A8orcDz1JK6f\n3kHIujXg96udUFyJ8nJC1qcTObg/rm6dCFuUBiYTnl8/xpnd+yn669tVS8oGfsMl9E+WnOtAL+/G\njEALs1ZOnyZs/lzsy19FqajAl3ArpdOfxXvXz0FRVM3WkLQw64ZgzjlM6OoVhL65FlNBAQDe7smU\njRuP964BYLOpnNA4s9Y6vcxZlpyFqIdgTAylz8/izK79lN07FnNuDpH3jybq5ylYd26XvY1pQVkZ\nIW+uJerufriS7iRs8StgtuCZ8gSn93xM0fqNeAcN1UQxC1EXFrUDCKF1geuup+SlhZT9agrhL/yR\nkE0bibpnIP5WrfH27EVlcm+83XsSjHapHbXZMB/+J6GrlhP65jpMRYUAeHv2omzsBLz9+ksZC92T\n1dp1oJdVJUag5VlbDnyEffFCbFnbqjcyCppM+Dom4u3ZG2+vFHwd7wCLPt77annWNXg8hLy1Afuq\nFVjP/m63P64F5feOpfzesQR+cJPKAS9PN7PWOb3MubbV2lLOdaCXB9wIdDFrvx/Lpx9jy9yKLXMr\nln3ZKGc3GgtERlHZvSfe5N54k3sTaH2dymEvTeuzNn9+CPuq5YRkpGMqLiKoKFQm965aSu57F1it\nake8YlqftVHoZc5Szg1ELw+4Eehx1kpxEdYd26vKOmsr5uPHqi/ztY2vLurKrj8Du129oN+jyVmX\nllYtJb++HOtHewHwt2hJ+b1jKL/vfgI33KhywPrR5KwNSC9zlnJuIHp5wI1A97MOBjEf/QJb5has\nmVuxfbgTxeOpuigkhMouP8WbnIK3Vwr++ARVt/7WxKx9PszHvsScm4vtH9uqlpLdxQQVBW/vPpSP\nGY+3Tz9dLSVfjCZm3QzoZc5Szg1ELw+4ERhu1hUVWPfsOr8K/PPPqi/yX9uqaolapQ3LmnTWXi/m\nL/Mw5x7GknP47HEO5qNHULze6qv5W15b9VnyfeMIXH9D02RrAoZ7XmuUXuYs5dxA9PKAG4HRZ236\n9j9VS9RZW7nkhmXJKfgSG3/DskaZdXk55qNfYMk9jDnnMJbcHMy5hzHnHUXx+WpcNRgWji8+Hn/b\nBHxt4vHd3p7KpB662aCuLoz+vNYKvcy5Uco5OzubRx99lFmzZpGcnHzB5e3atSMxMbH69IoVKzCb\nzZf89/QySD3kNIJmNetAoGrDsm1bLr5hWVKPqi3A2yYQdDrPHxxOqOX/qSt1VbP2eLB8kXu+gM8u\nDZv/9SVKIFDjqgFnBP74BHzxCVVFfLaQA61ag6l57HKhWT2vVaSXOddWzvV6a3r8+HGWL19eo3y/\nz+FwsGrVqvr880I0LyYTvg6J+Dok4nli2gUbloVs2kjIpo0XvWkwLJyA00nQ4Thb2hEEHecLPHDu\n9HcvP3eZo+o0TmvVDlVq+dxbKXFjzs3BnJtTY3W06atjKN97fx+Ijqbyzi742ybgj4/H1zYBf3wC\ngRYtDbVnNSEaU73KOTY2lrS0NJ566qmGziNEsxeMiMQ74G68A+6u2rAs7wusWZmY//0NirsYxe1G\nKXGfPS5BcRdjKi5G+eYESllZve7zGovlgnIPOJ0oPh/mI7mYL/Jb14HYOCq7JeFve76AfW0TCF5z\njZSwEFepXuVsv4KvgXi9XqZOncqJEyfo168fEyZMqPX60dFhWCxXv4qusdW2GkI0LJn1WXGJ0OXS\na6lqqKwEtxuKi88ff/9wkfOVswfcbvjm66rzz62Wbt0a+vSB2247f7j1VkwxMch+uOpOntdNQ+9z\nvmw5Z2RkkJGRUeO8yZMnk5SUVOvtpk2bxqBBg1AUhTFjxtCpUyduv/32S16/oMBzhZHVo5fPMYxA\nZn01rBAeU3VoeflrX3TWwSB4PFXHDseFNwoA8vjUmTyvm4Ze5nxVnzmnpqaSmppa5zsdPXp09d9d\nunQhNze31nIWQmiIokB4uNophGi2GmUTyby8PKZOnUowGMTn87F//37atGnTGHclhBBCGE69PnPO\nyspi6dKl5OXlcejQIVatWsWyZctYsmQJnTt3pmPHjrRs2ZLhw4djMpno1asX7du3b+jsQgghhCHJ\nTkjqQC+fYxiBzLrpyKybjsy6aehlzrV95tw8vvkvhBBC6IiUsxBCCKExUs5CCCGExkg5CyGEEBoj\n5SyEEEJojJSzEEIIoTFSzkIIIYTGSDkLIYQQGqOZnZAIIYQQooosOQshhBAaI+UshBBCaIyUsxBC\nCKExUs5CCCGExkg5CyGEEBoj5SyEEEJojJRzHfh8Pp588klGjx7NiBEj2Ldvn9qRDC07O5uuXbuS\nmZmpdhRDmjVrFiNHjmTUqFF8+umnascxvNzcXFJSUli9erXaUQxtzpw5jBw5kmHDhrF582a149Sb\nRe0AerJx40bsdjtr167lyJEjTJ8+nfXr16sdy5COHz/O8uXLSUxMVDuKIWVnZ3Ps2DHS09M5evQo\nM2bMID09Xe1YhuXxeJg5cyZdu3ZVO4qh7d69myNHjpCenk5BQQFDhw6lb9++aseqF1lyroNBgwYx\nffp0AFwuF4WFhSonMq7Y2FjS0tJwOp1qRzGkXbt2kZKSAsDNN99MUVERJSUlKqcyLpvNxquvvkpc\nXJzaUQytc+fOzJ8/H4CIiAjKysrw+/0qp6ofKec6sFqthISEALBy5UoGDhyociLjstvtmM1mtWMY\nVn5+PtHR0dWnXS4Xp06dUjGRsVksFkJDQ9WOYXhms5mwsDAA1q9fT/fu3XX7OiKrtS8hIyODjIyM\nGudNnjyZpKQk1qxZw6FDh1i0aJFK6YyltlmLpiF78RVGsmXLFtavX8+yZcvUjlJvUs6XkJqaSmpq\n6gXnZ2RksG3bNl555RWsVqsKyYznUrMWjScuLo78/Pzq0ydPniQ2NlbFREI0jB07drBo0SJee+01\nXX8sJqu16+Crr75i3bp1pKWlVa/eFkKPunXrxgcffADAoUOHiIuLw+FwqJxKiKvjdruZM2cOixcv\nJioqSu04V0V+laoO5s2bxzvvvEOrVq2qz1u6dCk2m03FVMaUlZXF0qVLycvLw+VyERsbq+tVVFr0\n4osvsm/fPhRF4bnnniMhIUHtSIb12WefMXv2bE6cOIHFYqFFixYsWLBA9wWiNenp6SxYsICbbrqp\n+rzZs2fXeM3WCylnIYQQQmNktbYQQgihMVLOQgghhMZIOQshhBAaI+UshBBCaIyUsxBCCKExUs5C\nCCGExkg5CyGEEBoj5SyEEEJozH8B8hu8PNsW71cAAAAASUVORK5CYII=\n","text/plain":["<matplotlib.figure.Figure at 0x7f543ff75190>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<matplotlib.figure.Figure at 0x7f543ddd1c50>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"l3yvzJYKukkw","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"base_uri":"https://localhost:8080/","height":347},"outputId":"2efdae01-b1c7-4c45-a167-94fba8296ac8","executionInfo":{"status":"ok","timestamp":1526470497782,"user_tz":-120,"elapsed":922,"user":{"displayName":"mark nabil","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s128","userId":"100349270716175055813"}}},"cell_type":"code","source":["import numpy as np\n","import matplotlib.pylab as plt\n","\n","# VRB trial\n","\n","def circle():  \n","\n","    theta = np.linspace(0, 2*np.pi, 30)\n","\n","    x_0=1\n","    y_0=1\n","    x = x_0*np.cos(theta)\n","    y = y_0*np.sin(theta)\n","    z = x*1.5\n","    w = y*1.5\n","\n","    plt.plot(z,w,'red')\n","    plt.plot(x,y,'green')\n","\n","# create a fn for Virtual Rigid Body    \n","def VRB():\n","  # 3 robots for instance\n","  \n"," \n","fig, ax = plt.subplots()\n","#tube()\n","circle()\n","#x, y = euler()\n","#polarmap(x, y)\n","plt.axis(\"equal\")\n","plt.show()\n"],"execution_count":1,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAecAAAFKCAYAAAAnj5dkAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMS4yLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvNQv5yAAAIABJREFUeJzs3Xd0VNXexvHvtEx6JUBCkQ7SpBeR\nEooUpQlIBxXsil7Rq1wLFlC5r9gAG6IiKKCCVAUVQhHpvfcOhpaElEmmnfePhChXxJRJ9pyZ32ct\n1iVMynP3jPNkn7PPPgZN0zSEEEII4TWMqgMIIYQQ4lpSzkIIIYSXkXIWQgghvIyUsxBCCOFlpJyF\nEEIILyPlLIQQQngZs+oAV124kKY6wj+KigomOTlTdQy/IGNdcmSsS46MdcnQyzjHxob97WMycy4A\ns9mkOoLfkLEuOTLWJUfGumT4wjhLOQshhBBeRspZCCGE8DJSzkIIIYSXkXIWQgghvIyUsxBCCOFl\npJyFEEIILyPlLIQQQngZKWchhBDCyxSpnA8ePEjHjh2ZOXPmXx5r3749gwYNYujQoQwdOpSkpKSi\n/CghhBDCbxR6+87MzExee+01WrZs+befM3XqVEJCQgr7I4QQQgi/VOhyDggIYOrUqUydOtWTeYQQ\nJcXtxpCZAfYrmI6fw5CehiEt9096Gsa0KwA4q9XAVbMW7rh4MBgUhxbCPxS6nM1mM2bzjb987Nix\nnDlzhsaNGzN69GgMN/gPOyoqWBf7od5oo3LhWTLWf8PhgCtX/viTlnbtx9f7c73PSUsDTQMgOj8/\nNywMatf+65+KFcEoy1fyS17XJUPv41xsd6UaNWoUrVu3JiIigkcffZRly5bRpUuXv/18vdxBRA93\nz/IFMtaA3Y5l43oCEpdjWb0S05nTObPbrKxCfTvNYkELC0MLDUercBPusDC0sDCspaKxmQNzHsv9\n4w4LRwsNw+B0YDp0ENPBA5gP7se0dSuGDRuu/b7BwTir18RVoybOmrVw1aiFs0ZN3DdVApP3/8Jd\nkuR1XTL0Ms43+gWi2Mq5V69eeX9v06YNBw8evGE5C+H3NA3TsSNYEpcTkLicgF/X5Bx2BrSAAFwV\nb0KrUCGnXPNKNLdQQ8L+VK5/ejw09+PQULBar3tYOjY2jPT8vpE5HJiOH8N0YH9OWR/cj/nAAcz7\n92LZse3a/ztWK65qNXDWrJlb2LVw1ayFq1JlsFiKPFxC+LJiKee0tDSefPJJPvzwQwICAti0aROd\nO3cujh8lhK4Z0q5gWbM6p4wTl2M6eTzvMWe16tgTOuBI6IC95W3gDYsrLRZc1Wvgql4DOz3++HeX\nC+OJ45gPHsgt7P05s+1DBzDv2XXNt9AsFlxVq+WUdY2auGrmFneVqjm/QAghCl/Ou3fvZsKECZw5\ncwaz2cyyZcto37495cuXp1OnTrRp04b+/ftjtVqpXbu2zJqFAHC7Me/akXOoOnE5lk0bMDidOQ+F\nR5B9Rw/sCR2wJ3TAXaGi4rAFYDLhrlIVe5Wq0KXbH//udmM8fSpnln0gt7hz/x64f98130IzmXBV\nqoyzXn2y7x6IPaGjHBYXfsugabkrQhTTy/kBPeT0Bb401oakJAJW5h6qXp2I8eJFADSDAWfDRtjb\ndcCe0BFn4ybwD4ssi4OSsdY0jOfO/unw+IHc2fZ+jCkpALjKVyBr0FCyBg3FHV+uZPMVE196XXsz\nvYzzjc45SzkXgF6ecF+g67H+00KugBW/XHNY11WmbM5h6vYdsbdphxYdozBoDq8aa03DvHM7gV9+\ngXXetxgz0tGMRuydOpM19B7sHW7X9Wzaq8bah+llnKWcPUQvT7gv0NVY/8NCLkeLVnmHql031/a6\na4W9dawN6WlYv59L4IzPsWzPWWzmii+XM5sePAx3ufKKExact461r9HLOEs5e4hennBf4O1jfcOF\nXNVrXLuQKzhYXdB88PaxBnJm0zOmY537Dcb0tJzZdIdOZA29F3vH25WcDigMPYy1L9DLOEs5e4he\nnnBf4K1jbUz6neCJEwj86ksMDgeQs5DL0bqtPhdy4b1jfV3p6QQumJczm966BQBX2bg/ZtNePva6\nGmsd08s4Szl7iF6ecF/gbWNtSE0hePJ7BH3yAQabDWflKmT37qt0IZeneNtY55dp106CZn6B9btv\nMKZdQTMYsLfvmDOb7tTZK6+l1utY641exlnK2UP08oT7Aq8Z68xMgj79mOBJ72BMTcFVNo7MZ8aQ\nNWCwV775F4bXjHVhZWRgXfg9QV9+jmXLJiBn4V3WoCFkDR6Ou+JNigP+QfdjrRN6GecblbNsiCvE\n9TgcBE7/jOjmDQgdNxYMkP7Sa1zesJ2soff4TDH7hJAQsgcOIeXH5VxO/A3biAcw2GyEvPMW0U3r\nE9G/NwGLF+bsSS6ETsjMuQD08tuYL1A21m431gXzCH5zHOZjR9GCg8l88BFsj4xCi4gs+TwlwCdf\n15mZObPpGV9g2ZSzF7g7tjRZg4ZiGzwMd6XKSmL55Fh7Ib2Ms8ychfgnmkbA8p+I7NiG8Afvw3Tq\nJLb77ufShh1kjnnJZ4vZZwUHkz1gMClLfubyqvVk3v8Q2O0EvzeRmGa3ENGvJwGL5oPdrjqpENcl\n5Sz8nnnjBiJ6dSNiYF/Me3aR1bc/l3/bQvqbE9HKlFEdTxSR6+baZIz/L5d2HuDK5I9xNG9JwKpE\nIkYMI6bBzQRO/yzv1plCeAspZ+G3TPv2Ej5sAFF3diJg3Vqyb+9C8oq1pH0wVdlhT1GMgoLIvnsg\nKYuWcXnNRjIffASyswl75kki+vfGePaM6oRC5JFyFn7HeOI4YY8+QFS7lliX/oCjeUuSF/3ElZnf\n4KpTV3U8UQJcNWuR8dqbJP+6EXv7jgSsXEFUmxZY53wts2jhFaSchd8wnD9PyH+eIfrWxgR+OxvX\nzXVI/fpbUhYuxdm8hep4QgF3XDyps+aSNvF9cLkIf/whwocPxJCUpDqa8HNSzsLnGa6kEvzma8Q0\nu4XgTz/GHV+OKx9NI3nFr9g7dva6va5FCTMYyBp6D8mr1mFv1Rrr0h+IbtucgIXfq04m/JiUs/Bd\nNhtBU94numl9Qt7+P9yhoaRNeJvLazeTfVc/MMrLX/zBXfEmUucuIn38BAw2GxEjhxP2wD0YLl9S\nHU34IXl3Er7H6SRw5nSiWzQk9JUXwK2R/sLLORuI3DsSAgJUJxTeymjEdv/DJK/4FUeTZgTOn0d0\n6+YELPtRdTLhZ6Sche/QNAIWzSeqTXPCnnocY0oymaOe4vKmHdhGPQUhIaoTCp1wVa1OyqJlpL/4\nKobUFCKG9ids1MMYrqSqjib8hJSz8A3Z2YQ9+gARI4ZhOn4M2/ARXN6wnYwXXkaLjFKdTuiRyYTt\n8SdJ/nk1jvoNCJz9FVFtWmBZuUJ1MuEHpJyF7hkuXiSyT3cCv5uDo3FTLv+6ifT/ewd32TjV0YQP\ncN1cm5Qfl5PxzBiM55OIvLsXof/+F6Snq44mfJiUs9A106GDRHVtj2XjerJ69yFl3mLcVaqqjiV8\njcVC5jNjSFm6Ametmwn6YhrRCbdiWbdWdTLho6SchW5ZViUS2bUDphPHyRj9LGkffQZBQapjCR/m\nrN+A5J9XkznqKYynThLRqxshL44Bm011NOFjpJyFLgXO+IKIAXdhyLJxZconZD77vFyvLEqG1UrG\nCy+TsvgnXFWqEvzxFKI63IY5917SQniClLPQF5eLkJdfIGz0KLSICFK+W0R2vwGqUwk/5GzSjOTl\nv5L5wMOYDx8i8o5OBL/+KmRnq44mfICUs9CPjAzC7x1C8Afv46xeg+QfV+Bs0VJ1KuHPgoPJGDeB\nlO+X4C5fgZB33yKqcwKmXTtVJxM6J+UsdMF47iyRPbpgXboEe+u2pCz5GXflKqpjCQGAo1Vrklf+\nhm3ovZj37iaqczuC3/4vOJ2qowmdknIWXs+8czuRnROw7NqBbeg9pM6eJ9cuC6+jhYaRPvE9UmbP\nxR1bmpA3xxHZrQOmgwdURxM6JOUsvFrAj0uI7NEFY9LvpL88nvS33gOLRXUsIf6Wo30nklevJ+vu\ngVi2byPyjk5ymFsUmJSz8E6aRtAHkwi/ZxAAVz7/Ctsjj8uKbKELWkQkaZM/5sr7H2JMTSGyfy9M\nhw+pjiV0xKw6gBB/4XDAgw8SOnUqrrJxXJk5B2f9BqpTCVFg2QMGk2azEfbsU0T07QFrf4WQGNWx\nhA7IzFl4FUNKMhED+sDUqTjq3ULKskQpZqFrWfeOJP2l1zCdPQMdOmD8/ZzqSEIHpJyF1zAeO0rk\nHZ0IWLMSevQgZcGPuOPiVccSoshsjz1BxlPPwNGjRPTrieGS3CNa3JiUs/AK5vXriOraHvOhg2Q+\n/DjMmwehoapjCeExmc++AE88gfnA/pzd7eT2k+IGpJyFctZvZxPZtzuG1FTS3nqPjFfGg8mkOpYQ\nnmUwwNtvYxs0FMuObUQMvhsyMlSnEl5Kylmoo2kETxhP+KMPoAUGkTprLlnD7lWdSojiYzSSPvF9\nsnrehWXDOiLuHSzbfYrrknIWamRlEfbQfYRMnICrYiVSfvgFR7v2qlMJUfxMJtKmfEJ2p84ErFxB\n+IP3yU5i4i+knEWJM1y4QORddxL4/VwczVqQvHQFrho1VccSouQEBHDl0y+x39YG6w+LCHviEXC7\nVacSXqRI5Xzw4EE6duzIzJkz//LYb7/9Rt++fenfvz9Tpkwpyo8RviQjg8g+d2LZvJGsu/qR8t1C\ntFKlVKcSouQFBXHly1k4Gjch8NvZhD43GjRNdSrhJQpdzpmZmbz22mu0bHn9uwKNGzeOSZMmMWvW\nLNauXcvhw4cLHVL4CE0j7N//wrx/H7bhI0j78FMIDFSdSghltNAwUmfNxVm7LkFfTCPktbFS0AIo\nQjkHBAQwdepUSpcu/ZfHTp06RUREBHFxcRiNRtq2bcu6deuKFFToX+DM6QR+OxtHo8akj58gW3F6\nEU3TyHBkkJTxO0dSDpGanaI6kt/QIqNI+WY+zqrVCJ78LsHvvqU6kvAChd6+02w2YzZf/8svXLhA\ndHR03sfR0dGcOnWqsD9K+ADTrp2E/ucZ3JGRXJk6HQICVEfyGS63i7MZZ0izp5FmTyPdfiXn7460\n3H+7Qro9jXRHet7HafY00nMfv/q/bu3ac55lgstSI7oWNaNqUiOqFjWja1EjqhYxQbL9pKdppUuT\n+t1CInt0IeSN19BCQrA98IjqWEIhr9lbOyoqGLPZ+69tjY0NUx1Bf1JT4YHhkJ2NYe5cYhrVydeX\nyVj/vVOpp1h2ZBnLjizjl6O/kJJVsJmuyWAiIjCCcGs4N4XcRFhAGOHWcMKt4YQGhHI27Sx7L+xl\nzemVrDm98pqvjQ2OpXZs7b/8KRNSBoMcDflHf/u6jr0ZViyH1q0JfeE5QuNi4b77SjacD9H7+0ex\nlHPp0qW5ePFi3sdJSUnXPfz9Z8nJmcURxaNiY8O4cCFNdQx90TTCRwzHeuQImaOeIqNZG8jHGMpY\nX8vmtLHu7FoST/5C4qnlHEz+4x7BFcIq0r5CJ6ICowi1hBEWEEZoQBhhljDCAsIJC8j9N0soobkf\nB5oC84r0RmOd7kjncPJBDlzez8HkAxxM3s+By/tZfWI1q06suuZzI62ReTPs6lE1cv4eVYv40HJS\n2rn+8XUdUQbTNwuI7NkFw/33k+Y2kd3zrpIL6CP08v5xo18giqWcy5cvT3p6OqdPn6Zs2bIkJiby\n1ltyHsUfBU39EOviBdhbtiLjuRdUx9ENTdM4kLyfxJPLSTz1C+vP/kaWKwuAYHMwHSveTkLFDiRU\n6EjVyGrFVn6hllAalG5Eg9KNrvl3m9PG4ZRDHLy8P7ewc4p7S9ImNv6+/prPLR1choG1hjD45mFU\niqhcLDl9iavWzaTO+Z6Iu7oT9vBItOBg7J26qI4lSphB0wq3NHD37t1MmDCBM2fOYDabKVOmDO3b\nt6d8+fJ06tSJTZs25RXy7bffzogRI274/fTyW44ecnoL8+aNRPboghYZRfKKX3GXjcv31/rjWCdn\nXWb16ZUknlzOylMrOJtxJu+x2jF1SajQgYSKHWge1xKryeqxn+vJsc52ZXMs9SgHL+/nQO4se9Xp\nxLwFZm3LJzCszn10qdQNi8nikZ+pJwUZa8v634jo3xvcblJnzcVxW5tiTuc79PL+caOZc6HL2dP0\nMpB6yOkNDJcvEdWhNcazZ0j9dgGONu0K9PX+MNZOt5OtSVtIPPULK08tZ9v5rXmLsqIDo2lXoT3t\nKnQgoUIHyoSULbYcxT3WNqeNxUcW8OXez9lwLueqjdig0gyoNZjBtYdRJaJqsf1sb1PQsbas+IWI\nYQPAbCHluwU4mzQrxnS+Qy/vH1LOHqKXJ1w5t5vwwf2wLv+ZjGefJ3P0swX+Fr481hdtF3lv60Rm\n7/8qb0ZpMphoUrZZzuy4QgfqxzbAZCyZBZIlOdYHLu9n5t4vmHPga1Jy/7+3Lt+OYbXvoWvlOwkw\n+fYq/sKMdcCSRYSPHIYWGkbK90tw1a1XTOl8h17eP6ScPUQvT7hqQe9NJHT8K9gTOpA6ay4YC345\nvS+Odbo9jY92TOGD7ZNId6RRNiSO22/qSkLFDrQu14Zwa4SSXCrGOsuZxeKjC5ix9wvWnV0LQKmg\nUvSvOZihtYdTJbJaieYpKYUda+s3swh/7EHcpWJJWbgUV7XqxZDOd+jl/UPK2UP08oSrZFm7hog+\n3XGXKUvy8l8LvTWnL411tiub6bun8e7Wt7hou0ipoFL8q/EzDKtzn0fPHReW6rE+lHyQGXu/YM7+\nr0jOTgbgtnJtGFr7HrpV6e4VY+QpRRnrwM8/JezZp3CVK09y4lq0yCgPp/Mdql/T+SXl7CF6ecJV\nMSQlEdXhNoyXL5Ey/0eczZoX+nv5wli73C6+PTib/258ndPppwi1hPFow1E8WP8RQgO85xpMbxnr\nLGcWPxxbxIw9X7D27Bog59x7zmz6HqpF6X+2WNSxDn5zHCFv/xfbiAdIf0OugPk73vKa/idSzh6i\nlydcCZeLiH49Cfh1Nekvj8f2yONF+nZ6HmtN0/jx2BLe2PAqB5L3YzVZubfu/TzRaLRX7q7ljWN9\nOPkQM/dNZ87+r7iUdQnImU2Pu20CtWPyt4mNNyryWNvtRLVrienoEVJ+XoWz3i2eC+dDvPE1fT03\nKme5ZaTwiOD/jifg19Vkd70T28OPqY6jzK9nVtNtXgfuWTqIQykHGVRrKOsGbeXVVq97ZTF7q2pR\n1Xn51nFsH76fTzp9zm3l2vDrmdV0+rYN722ZiNPtp/c/Dggg/Y23MLjdhD47Wm4z6cOknEWRBSz/\niZB33sJVsRJp73/glze02HF+G3cv6sVdC+5kS9Jm7qzSk9X9N/Bu+ymUD6ugOp5uWU1WelXvw7ye\ni/mq2zdEB8YwfsMrdP/+dg4nH1IdTwlH2wSyet6FZfNGrHO+Vh1HFBMpZ1EkxjOnCXv0AbSAAK5M\nm44WEak6Uok6knKI+5fdQ6fv2rLy1Apal2/Hsj6JfNZlBjWia6qO51M6VerC6gHruat6P7Ykbab9\nN634eMeUv9ywwx9kvDIeLTiE0FdfxJB8WXUcUQyknEXh2e2EjxyO8fJl0sdNwHlLQ9WJSszZ9DOM\nXjmK22Y1Y8GReTSIbci33Rcwt8dCGpZprDqez4oKjOajTtOY1nkGIZYQXlw7ht4L7uB46jHV0UqU\nO74cGU8/h/HSJULeeE11HFEMpJxFoYW8NhbLlk1k3dWPrOH+cfccl9vFhI3jafFVQ2bs/YLKEVWY\n1nkGy/qupG2FBNXx/Eb3qj1ZPWAj3Sp3Z93ZtbSbcyvT93yGl6xvLRG2Bx7GWaMmgdM/w7xjm+o4\nwsOknEWhBCxZRPDHU3BWr0HaW+/5xXnmdEc69ywdxMTNE4gOjOHdhCmsHrCB7lV7yl2XFIgNjuXz\nLjP5oONULCYLz6x6kv6Le3Mm7bTqaCXj6uIwTSP02adkcZiPkXIWBWY8dpSwUQ+jBQVxZdoMCA1V\nHanYnU0/Q4/vu7Ds+I+0Lt+OVQPWMejmoZiNXnNLdL9kMBjoW6M/q/uvp0PFTqw8tYK2c1oyZ//X\nfjGLdrRuS1bvPli2biHw6xmq4wgPknIWBZOVlXOeOe0Kaf99B1etm1UnKnY7zm+j83cJ7L64k6G1\n72X2HXOJsPrXwjdvFxcaz9d3fMfb7Sbh0lw8vuIhhv84kKTMJNXRil3Gy+Nxh4QSMm4shsuXVMcR\nHiLlLAok9IXnsOzagW3IcLL7D1Idp9gtObqInvO7cj4ziVdufZ232r7rl7c61AODwcCQ2sNZ1X8d\nt5Vrw9LjP9B2dnMWHv5edbRi5Y6LJ/OZMRgvXybkdVkc5iuknEW+WefPJejLz3DWqUf6+P+qjlOs\nNE1j8rb3uG/pEAC+6Po1Dzd4TM4t60DF8Jv4rsdC3mj9f9icNkb+NJwHfrqHy1m+O6u03f8Qzpq1\nCJzxOeZtW1THER4g5Szyx+UiZPwraFYrV6ZNh6Ag1YmKjcPlYPTKUby67kXKhJRlYe+ldK18h+pY\nogCMBiMj6j1I4t1raVKmGfMPz6P1rOZsOLdedbTiYbGQ/ubEPxaHuVyqE4kiknIW+WJdvADTieNk\n9R+Mq4pv3s4PICUrmQGL72LmvunUK3ULy/okUj+2gepYopCqRFZjUe9lvNTyNZKzLzNwcR+2n9+q\nOlaxcLRqTdZd/bBs30bgV1+qjiOKSMpZ/DNNI2jye2gGA5lFvKGFNzuaeoRu8zqy5swqulS+g4W9\nlxIXGq86ligik9HEYw2f4KOO08h0ZtB/UW/2XdqrOlaxyHh5HO7QMELGv4zhku8exvcHUs7iH1nW\nrMKyYxv2O3virlJVdZxisf7sb3Sb24HDKYd4pMEoPu88kxBLiOpYwoN6VOvNO+0mk5ydTL9FPTma\nekR1JI9zl40j899jMCYnE/L6K6rjiCKQchb/KHjyuwBkPvaE4iTF45sDs+i7sAdX7FeY2O59Xr51\nHCajSXUsUQwG3jyE12/7L+czk+i3sKdPblhiG/EgzptrEzhzOuYtm1THEYUk5SxuyLxrBwErV2C/\nrQ3Ohr61Z7Rbc/Pmhtd4bPmDBJqDmH3nPIbWvkd1LFHMRtZ/iP80f4lTaSfpu6gH5zPPq47kWdcs\nDhsti8N0SspZ3FDQlPcA35s125w2Hvr5Pt7e8n/cFF6JH+76hTbl26mOJUrIE41G83jDf3Ek5TB3\nL+pFSlay6kge5WjZiqy+/bHs3E7gl5+rjiMKQcpZ/C3jieNY58/DWbsujoSOquN4jMPlYNDivsw/\nPI9mZVuwtE+i3N7RzxgMBl5o8TL31h3J3ku7GbikD+n2NNWxPCp97DjcYeGEvP4qhosXVccRBSTl\nLP5W8EeTMbjdObNmH9p8Y/yGV1h7dg1dKt/B3J6LiAmKUR1JKGAwGHij9Vv0qzGALUmbGfbjQGxO\nm+pYHqOVKUPms//BmJpCyLixquOIApJyFtdluHiRwK9n4KpQkeyed6mO4zE/HlvCB9vfp2pkNT7o\n8AlWk1V1JKGQ0WDkvfYfcEeVHvx6ZjUjlw3D7rKrjuUxtvsewFm7LkFfz8C8aYPqOKIApJzFdQV9\n9gkGmw3bQ4+CxTf2kj6eeozHlz9EoCmQaZ1nEBoQpjqS8AJmo5mPOk0joUIHfj6xjEd/eQCX20cW\nUZnNpL05EUAWh+mMlLP4q4wMgqZ9jDsqCtugYarTeESWM4v7f7qHK/ZUJrR5m9oxdVRHEl7EarLy\neZevaBF3KwuOzGP0ylG4Nd+4P7KzRUuy+g/CsnsngV9MUx1H5JOUs/iLwFkzMCYnY7vvAQjxjY04\nXlo7hh0XtjGw1hAG3jxEdRzhhYItwXx1xzc0iG3I1/tn8NLaMT5zT+j0F1/FHR5ByBuvyeIwnZBy\nFtdyOgn+cDJaUBC2EQ+qTuMR8w59yxd7pnFzdB3eaP2W6jjCi4UFhDO7+zxqRd/MJzs/ZMKm8aoj\neYRWujSZ/3oG45VUAud9ozqOyAcpZ3EN64J5mE6dJGvgELRSpVTHKbJDyQd5KnEUIZZQpnX+kmBL\nsOpIwstFB8bwbfcFVAqvzNub/8uUbe+rjuQRWX37oxmNWBf49v2tfYWUs/iDphE8+T00o5HMhx5T\nnabIMh2ZjFg2lExnBu+0m0S1qOqqIwmdKBNSlrk9FxEfUo5X173IjvPbVEcqMq1MGRy33oZl0waM\nZ3xv21JfI+Us8lgSl2Pes4vsnr1xV6qsOk6RaJrGs6ufYv/lfdxX9356Ve+jOpLQmQphFZnU4SM0\ncl5LvrBALLtHbwCsC+crTiL+iZSzyBOcu1Wn7bEnFScpuq/3zWDOga9pWLoRr7R6XXUcoVOty7el\nd7U+bD2/ha/3zVAdp8iy7+yZc2h74TzVUcQ/kHIWAJi3byVgzSrsbRNw1rtFdZwi2X1xF2PWPE2E\nNZKpt0+XjUZEkbx863hCLKGMWz+Wy1n6vkeyVqoUjtvaYtmyGePJE6rjiBuQchYABE2+eoMLfc+a\n0+xXGLlsGFmuLCZ3+JiK4TepjiR0Li40nmeajuFy1mVeX/+a6jhFlt0z99D2ogWKk4gbkXIWGI8e\nwbp4AY76DXC0aac6TqFpmsaTiY9xNPUIjzV8ks6VuqqOJHzE/fUeomZULWbs/ZxtSVtUxymS7G7d\n0UwmObTt5Qpdzq+//jr9+/dnwIAB7Ny585rH2rdvz6BBgxg6dChDhw4lKSmpyEFF8Qn+MOcGFzad\n3+Bi2q6PWXRkPi3ibuU/zV9SHUf4EIvJwpttJuYtDtPz9p5aTAyONu2wbNuK8fgx1XHE3yhUOW/c\nuJETJ04wZ84cxo8fz/jxf71Qf+rUqcyYMYMZM2ZQpkyZIgcVxcNw/jyBs2fiuqkS2Xf2VB2n0LYk\nbWLsb89TKqgUH3f6DLPRrDqS8DGtyrXmrur92H5hG1/t+1J1nCK5ejMbWbXtvQpVzuvWraNjx5z7\n+1atWpXU1FTS09M9GkyUjKBpH2HIzibz4cfBrM9C0zSN0SufwOl28mHHacSFxquOJHzUy7eOI9QS\nxvj1L3PJpt/FYdld70Azm7G8hP3XAAAgAElEQVQulA1JvFWhyvnixYtERUXlfRwdHc2FCxeu+Zyx\nY8cycOBA3nrrLZ/Zn9bXGNLTCPrsU9wxMWQNGKw6TqGtOPkzey/tpnf1PrStkKA6jvBhZUPi+Hez\nMSRnJ/P6hldUxyk0LSoae9sELDu3Yzx6RHUccR0emSr9b/mOGjWK1q1bExERwaOPPsqyZcvo0qXL\nDb9HVFQwZrPJE3GKVWysD91mcOankJoCr75K7E3ed+ohv2P98Q+TAXix/fO+9fyUIBm3/Hsu4Wm+\nOfQ1M/dO59GWD9G8fPMCfb3XjPXQwbD8Z2KW/wDN/6M6jcd5zTgXUqHKuXTp0lz8051Nzp8/T2xs\nbN7HvXr1yvt7mzZtOHjw4D+Wc3JyZmGilKjY2DAuXEhTHcMzNI3ot9/BGBzMpbuHonnZ/6/8jvXW\npM2sPL6SdhXaU85U1XeenxLkU6/rEjL+1v+j5/yuPLjwYZb2WYHJmL+JhTeNtaFVe2IsFlxfzyb5\n/sdVx/EobxrnG7nRLxCFOqzdqlUrli1bBsCePXsoXbo0oaGhAKSlpTFixAjsdjsAmzZtonp12dPY\n2xiPHcV0+hTZt3dBi45RHafQJm/LuT778Yb/UpxE+JOW8a3oW6M/Oy5sY8beL1THKRQtIhJ7QgfM\ne3ZhOnxIdRzxPwpVzo0aNaJOnToMGDCAcePGMXbsWObNm8fPP/9MWFgYbdq0ybvMKjo6+h9nzaLk\nWbZsAsDZpJniJIV3JOUQS44u5JbYhtxWro3qOMLPjL11HGEB4by+4RUu2vR5j+Q/9tqWhWHeptDn\nnJ9++ulrPq5Vq1be34cPH87w4cMLn0oUO8vmjQA4dFzOH2yfjIbG4w2fxKDj67OFPpUJLsNzzZ7n\n+V+fZfz6l3knYbLqSAVm73oHmtWKdcE8Mp/6t+o44k9khzA/Zd6yGc1qxVm3vuoohZKUmcQ3B77m\npvBK3FGlh+o4wk/dW/d+asfU5at9X7L5942q4xSYFhaOPaEj5n17MR3YrzqO+BMpZ3+UmYl5z66c\nG1wEBKhOUyif7vyIbFc2jzQYle/FOEJ4mtlo5s02EwF4dvVoXd5WMm+vbTm07VWknP2QZcc2DC6X\nbg9pp9vT+Hz3p5QKKsWAWvq9Plv4hhZxLbmrel92XdzBxnPrVccpMHvnrmiBgVLOXkbK2Q+ZN+cs\nBnM0aao4SeF8ufcLrthTGVnvIYLMQarjCMHAWkMBmH94ruIkBaeFhmHvcDvmA/sx7d+nOo7IJeXs\nh/JWajfWXznbXXY+3jGFYHMI99YdqTqOEEDOvtsxgTEsOrJAlzfFyDu0PV9/v1z4Kilnf6NpmDdv\nxBUXj7tcedVpCmzeoW85l3GWobWHExUYrTqOEEDOuec7qvTkgu0868/9pjpOgWV37IwWFJRzaFu2\nW/YKUs5+xnj6FKbzSbqcNbs1N1O2vYfZaObBWx5VHUeIa/SsljP7nH9Yh/dJDg3F3rEz5sOHMO3d\nozqNQMrZ71w9pO3QYTn/cmIZB5L307taX8qHVVAdR4hrtIxvRamgWJYcXYDT7VQdp8Cyel29jaQO\nf7nwQVLOfsas481HJm17F4BHGz6hOIkQf2U2muletScXbRf57eyvquMUmL3D7WjBwVjnz5ND215A\nytnPWLZsQjObcda/RXWUAtl4bgMbzq2jY8XbqR1TR3UcIa6rZ9Wc2eeCwzq8LCk4mOzbu2A+dhTz\n7p2q0/g9KWd/kpWFeecOnHXrQZC+LkGavD1n1vxYwycVJxHi7zWPa0np4DIsOboAh8uhOk6BZffI\nPbS9QIe/XPgYKWc/Yt61A4PDobtD2un2NH46/iP1YxvQMr6V6jhC/C2T0UT3qj25nHWZX8+sVh2n\nwOzt2gNg3rldcRIh5exH9Hp989bzW3BrbtqWT5AbXAiv17NaHwAWHtHh7DM0FHdEJMZzZ1Un8XtS\nzn4kb2cwnZXzlt9zcjcuo6/cwj81K9ucsiFxLDm6UJeHtt3x8RjPnVMdw+9JOfsRy5ZNuEvF4r6p\nkuooBbIlKbecy0o5C+9nNBjpUbUXKdkprD6dqDpOgbnj4jFeScWQnqY6il+TcvYTxnNnMZ05nbOf\nto4ODWuaxpakTVQMu4kywWVUxxEiX3pcXbWtw0PbrvhyADJ7VkzK2U/o9ZD2sStHuZR1icZlmqiO\nIkS+NSnblHKh5fnh6GLsLrvqOAXijosHwHj2jOIk/k3K2U/kLQbT2Urtq+ebm5TVV27h34wGI92r\n9uKKPZVVp1aojlMg7ryZsywKU0nK2U9YtmxCMxpx3NJQdZQC2ZyUs6OZLAYTeqPXvbZdcXEAmKSc\nlZJy9gd2O+Yd23DWrguhoarTFMiWpM1YTVbqlqqvOooQBdKodBMqhFVk6fEfyHJmqY6Tb+643Jnz\nWSlnlaSc/YB5724MWVm6u745w5HBnou7qB/bgABTgOo4QhSIwWCgR9XepNmvsOb0StVx8s0dn3vO\n+Zycc1ZJytkP5N3sorG+FlXtvLAdl+aSQ9pCt66+dg+nHFacJP+08Ai04BCZOSsm5ewHLLkrtZ1N\n9bWoanPu9c1NpJyFTsWH5sxCz2XoqOgMBlzx8Zhk5qyUlLMfsGzZhDsyEleVaqqjFMjm33Nm/LJS\nW+hVfGjO+dtz6ToqZ3LOOxsvXYIs/Zwr9zVSzj7OcOECphPHc65v1uHmI3Eh8XlvcELoTWxQaUwG\nE2cz9DULzTvv/LtsRKKKlLOPM+/aAYCzQSPFSQrmZOpJzmcmyflmoWsmo4myIXG6mzm7cjcikcup\n1JFy9nEGR87G+1pYuOIkBbPu9DpADmkL/YsLief3zHO43C7VUfJNdglTT8pZeKX1p9cDsvmI0L+4\n0HicbicXbRdUR8m3vF3CZMW2MlLOwiutO70Os9FM/dhbVEcRokjiQ/S3YluudVZPyll4nSxnFtvO\nbaNeqfoEmYNUxxGiSOJyFzSe1dF5Z1fuLmEmuTOVMlLOwuscTjmEw+2gfqy+9gEX4nr+mDnrZxaq\nxcSgBQTIzFkhKWfhdVxuJ4DMmoVP0OPMGYMBd9l4OeeskJSzEEIUo7iQnLs8nU3X1yzUFR+PMel3\nyL3iQ5QsKWchhChGZXPLWU8LwiBnUZhB0zCeT1IdxS9JOQshRDEKMAUQG1Raf+Wcd+tIfc34fYWU\nsxBCFLP40HKcSz+Lpmmqo+SbbOGplpSzEEIUs7jQeLJcWVy2XVYdJd/yLqeSmbMShS7n119/nf79\n+zNgwAB27tx5zWO//fYbffv2pX///kyZMqXIIYUQQs+uXk51+sppxUnyL2/mLCu2lShUOW/cuJET\nJ04wZ84cxo8fz/jx4695fNy4cUyaNIlZs2axdu1aDh/Wz43GhRDC0+L0WM5xskuYSoUq53Xr1tGx\nY0cAqlatSmpqKunp6QCcOnWKiIgI4uLiMBqNtG3blnXr1nkusRBC6ExscGkANp7ZqDhJ/rlLlwEg\ncP48xUn8k7kwX3Tx4kXq1KmT93F0dDQXLlwgNDSUCxcuEB0dfc1jp06d+sfvGRUVjNlsKkycEhUb\nG6Y6QsFE5GzkERpqJVQn2aMcIQAEBwXob7x1Ssa5eGUfzJm8LDiwgFcSXlGcpuD0+PrQY+Y/K1Q5\n/y9PrEBMTs70QJLiFRsbxoULaapjFEhAqo0IID09G5tOsicnZwCQabPrbrz1SI+va70xOqwAjG45\nWj9jnZlJLOBo1oIUvWTOpZfX9I1+gSjUYe3SpUtz8eLFvI/Pnz9PbGzsdR9LSkqidOnShfkxQgjh\nE87l7g5WIaKC4iT5Z/o9ZyGYs1p1xUn8U6HKuVWrVixbtgyAPXv2ULp0aUJDQwEoX7486enpnD59\nGqfTSWJiIq1atfJcYiGE0JmzuRuQlA8vrzhJ/l1dpe0uG6c4iX8q1GHtRo0aUadOHQYMGIDBYGDs\n2LHMmzePsLAwOnXqxMsvv8zo0aMB6NatG5UrV/ZoaCGE0JOrN70oF1aO9BSn4jT5c3VnMHd8OcVJ\n/FOhzzk//fTT13xcq1atvL83bdqUOXPmFD6VEEL4kHPpZ4iyRhFkCSId7z8XCmA8lztzzr3eWZQs\n2SFMCCGK2bmMc3m3jtSLqzuDXd0pTJQsKWchhChGafYrpDvS8nYJ0wvjuZw9tWXmrIaUsxBCFKOr\n55v1NnM2njuLFhSEFhmlOopfknIWQohidDb3Mqr4UH3NQE1nz+AqGwcGg+oofknKWXidCGskAL/r\n7P63QlzP1fs4x+npsLbdjvHCeVmprZCUs/A6N4VXolRwKbYkbVYdRYgiuzpz1lM5X72H89WbX4iS\nJ+UsvI7BYKBF+RacSjtJUsbvquMIUSTnMnKKLl5H55zzNiCRmbMyUs7CK7Uo1wKAzUmbFCcRomjO\n6fCc89WtO10yc1ZGytlfeODmJCWpZYWWAGyRchY6dzbjLKGWMMICwlVHyTeZOasn5ezj3DExAJhO\nn1ScpGCaxjfFgEHKWejeufQzupo1AxjP5W7dGSf7aqsi5ezjnPVuQQsIwLxFXyUXZg2jVnRttp/f\nisPlUB1HiEKxOW0kZydTVkeLwQBMZ68e1paZsypSzr7OasVZrz7m3bvAZlOdpkCalG2GzWlj3+U9\nqqMIUShXL6PS3cz57Bk0sxkt91bAouRJOfsBR5NmGJxOzDu2q45SIE3KNAVkUZjQr3O5u4Ppb+vO\nszmXURmlIlSRkfcDzsY5JWfR2aHtxlfL+feNipMIUTin0nLWeujqsLbLhTHpd7nGWTEpZz/guFrO\nm/VVctWiqhNhjZRFYUK3fj6xDICmZZsrTpJ/xgvnMbhcuOSGF0pJOfsBd/kKuMqUxbx5o64uqTIa\njDQq3ZhjqUe5ZLukOo4QBZLuSOeXE8uoHlmD2jF1VMfJN2PurSLdZaWcVZJy9gcGA87GTTEl/Z73\nH55eNCnbDIAtSfqa9Qvx8/Gl2Jw2elTrjUFHN4/44xpnKWeVpJz9hF4PbV897yyHtoXeLDj8PQA9\nq92lOEnBmHKvcXbJBiRKSTn7CWfTnBmoebO+Sq5R6cYAbJabYAgdSbensfzkT9SMqkWt6JtVxymQ\nvJmzLAhTSsrZTzjqN0AzmXS3YjsyMIoaUTXZmrQZl9ulOo4Q+bLs+I9ku7J1N2uGP+0OJjNnpaSc\n/UVwMM469TDv3A7Z2arTFEjjMk3JcKRzIHm/6ihC5MuCw/MA6FG1t+IkBWc8dw7NYMBduozqKH5N\nytmPOJs0xWC3Y969U3WUApHzzkJPrmSnsuLkL9wcXYca0TVVxykw09kzOcVssaiO4teknP2IQ6eb\nkVxdsS2bkQg9WHr8B+xuO710eEgbTcvZHUxWaisn5exHHE2uLgrTV8nVjKpFdGA0y47/QKYjU3Uc\nIW5oYe4q7R7VeilOUnDGUycx2O2448urjuL3pJz9iLtSZdwxMVi26Gvls8lo4p46I7icdZlZ+2eq\njiPE30rNTiHx1HLqlqpP1cjqquMUmHXJIgDsCR0UJxFSzv7EYMDRuCmmUycxJv2uOk2BjKj3EIGm\nQD7cPgmn26k6jhDX9eOxJTjcDnrqcCEYgHXBXDSTiexu3VVH8XtSzn7G2USf1zvHBscyoNZgTqad\nYNGR+arjCHFdeau0q+mvnI0nT2DZugXHbW3QSpVSHcfvSTn7Gb0uCgN4uMHjGA1GJm17F01He4QL\n/5CcdZlVpxO5JbYhlSOqqI5TYNaFOb/0ZvfU4UI2HyTl7GecDRuhGY2YdVjOlSOq0L1KL3Zf3Mmq\n04mq4whxjR+PLcHpdupy1gxgXTgPzWwmu9udqqMIpJz9jhYahqtWbSzbt4LDoTpOgT3W8AkAJm17\nV3ESIa41//BcAHpU1eEq7WNHsWzfhqNNO7ToGNVxBFLOfsnRuCkGmw3zvj2qoxTYLaUb0rp8O9ac\nXsmO89tUxxECgEu2S6w5vYpGpRtzU3gl1XEKzLoo55B2lhzS9hpSzn7IodObYFz1WIOc2fPkbe8p\nTiJEjh+OLcKlueihx41HAOuC79EsFuxd71AdReSScvZDTp3ePvKqdhXaU7dUfRYdnc+x1KOq4wg/\nZ3fZ+XjHFAwYdHlI23T0MJZdO7C3a48WGaU6jsgl5eyHXFWr4Y6I1OWiMACDwcBjDZ/Arbn5cPsk\n1XGEn/tk54ccTD7A8Dr3UT6sguo4BWZdkLOjWXYPfS5k81VSzv7IaMTZuAnmY0cxXLyoOk2h9Kja\nm4phNzF7/1dcyLygOo7wU2fTz/DWpjeJCYxhTPMXVccpFOuC79ECArB36aY6ivgTKWc/lXe981Z9\nzp7NRjMPN3iMLFcW03Z9pDqO8FNj1z5PpjODF1u+SlRgtOo4BWY6dBDz3t3YEzqgRUSqjiP+pFDl\n7HA4GD16NAMHDmTIkCGcOnXqL59Tp04dhg4dmvfH5XIVOazwnKvlrNdD2wADag0hOjCaz3ZPJd2R\nrjqO8DOrTiWy4Mg8GpdpyoBag1XHKRTrwtxD2rJK2+sUqpwXL15MeHg4s2bN4qGHHmLixIl/+ZzQ\n0FBmzJiR98dkMhU5rPAcZ+MmAAT8ukZxksILsYQwot6DpGSn8NXe6arjCD9id9kZs+ZpjAYjE9pM\nxGjQ50FI64J5aFYr9s5dVUcR/6NQr6h169bRqVMnAG699Va2bt3q0VCi+GkRkdjbJmDZtAHzti2q\n4xTafXUfIMgcxEc7puBw6W9TFaFPH+2YwuGUQ9xTZwT1YxuojlMopv37MO/fh719J7SwcNVxxP8o\nVDlfvHiR6Oic8ytGoxGDwYDdbr/mc+x2O6NHj2bAgAF8/vnnRU8qPC7zsScBCJryvuIkhRcTFMPg\nm4dxJv003x/+TnUc4QfOpJ3m7c0TKBVUiueavaA6TqH9cUhbVml7I/M/fcK3337Lt99+e82/7dix\n45qPr3cTgn//+9/06NEDg8HAkCFDaNKkCfXq1fvbnxMVFYzZ7P2HvmNjw1RH8Jw+3aFRIwIXLyAw\nNQmqVVOd6Br5Hevn2z/H57s/5cOd7/NAy3uxmCzFnMz3+NTrupg9svIlMp2ZTLljCtUrVCzw13vF\nWGsaLFkAgYGED74bQkNVJ/I4rxjnIvjHcu7Xrx/9+vW75t+ee+45Lly4QK1atXA4HGiaRkBAwDWf\nM3DgwLy/t2jRgoMHD96wnJOTMwuavcTFxoZx4UKa6hgeZX3occIfuBfbuDdJ/793VMfJU5CxDiGG\n/jUH8fX+GTyxaDSvtBpfzOl8iy++rotL4snlfLf3O5qWbU7X+N4FHjdvGWvT3j1E79tH9p09uWLT\nwKY+kyd5yzj/kxv9AlGow9qtWrVi6dKlACQmJtK8efNrHj969CijR49G0zScTidbt26levXqhflR\nophl39kT102VCJw9E8P586rjFNq4296kamQ1PtwxiR+PLVEdR/igbFc2//n1GYwGI2/qeBEY5NyB\nCuSQtjcr1KurW7duuN1uBg4cyFdffcXo0aMB+OSTT9i2bRtVqlShbNmy9O3bl4EDB9K2bVvq16/v\n0eDCQ8xmMh9+HEN2NkHT9Hu9cGhAGNM6zyDQFMjjyx/ieOox1ZGEj/lo+2SOpBzmvrr3U6+Ujt/P\nNC1n45GgILI7dladRvwNg+Yld63XyyEIPeQssMxMYhrXAaeLy9v2oIWqP1dT2LGetW8mTyQ+Qv3Y\nBizu/ROB5sBiSOdbfPZ17UGn007RalYTQiyhrBu0hQhr4Tbs8IaxNu3aSXSH28jq0Zu0T33zEkRv\nGOf88PhhbeFjgoOxjXwIY2oKgTP1/R/rwJuHMLDWEHZe2M5La8eojiN8xItrx2Bz2hjb8rVCF7O3\nCJSNR3RBylkAYLt3JFpwMEEfTQGHvq8XfqP1W9wcXYcv9kxj3qFv//kLhLiBFSd/ZsnRhTSPa8nd\nNQf+8xd4M03L2XgkOAR7h06q04gbkHIWAGjRMdiGDMd09gzWefoutGBLMNM6f0mIJZSnEkdxKPmg\n6khCp7KcWTy3+mlMBhNvtp6IwWBQHalIzLt2YDp+jOzOXSA4WHUccQNSziKP7cFH0Uwmgqe8l3Md\npI5Vi6rOO+0mkenMYMSyoWQ4MlRHEjr0/ta3OX7lGCPqPUCdUnVVxyky6/zcVdo95JC2t5NyFnnc\nFSqS3bsv5v37CPhlmeo4Rdareh/uq3s/+y/v49nVT113sxwh/s7s/V/x1uY3KRsSx7+b/kd1nKLT\nNKwLv8cdEiqHtHVAyllcI/PRJwAImvye4iSe8Uqr12kQ25BvDszi630zVMcROrHoyHyeTHyUKGsU\nc+78nnBrhOpIRWbevhXTyRM5920OlKsYvJ2Us7iGq05dsjt0ImDdWsybN6qOU2RWk5WpnacTYY1k\nzJqn2X1xl+pIwsv9cmIZD/08gmBzCLPvnMfNMbVVR/KIoA8nAZDdq4/iJCI/pJzFX9hyb4gR7COz\n55vCKzG5w8dkubIYuWwYafYrqiMJL/XbmV+5b+lQTAYTX93xDQ3LNFYdySMsa1YROH8ejkaNsXeS\njUf0QMpZ/IXj1ttwNGpMwI+LMR0+pDqOR3Su1JXHGj7J0dQjPJn4mJx/Fn+xNWkzg3+4G5fm4ouu\nX9EyvpXqSJ5htxM65mk0g4H0CW+DUd729UCeJfFXBgOZjz6JQdMI+kC/t5P8X2OavUjzuJYsOjKf\nabs+Vh1HeJG9l/YwYPFd2JyZfNTpM9pX9J0FU0GffIj54AGyht+H85aGquOIfJJyFtdl73YnzipV\nCfxmFsak31XH8QiLycInnT6nVFApxv72PFuSNqmOJLzA0ZTD9FvYk5TsFN5NmEL3qj1VR/IY49kz\nhLz1Ju6YGDLGvKg6jigAKWdxfSYTtkdGYbDbCfrkQ9VpPCYuNJ4PO07D6XYy9IcBbE3arDqSUOh0\n2in6LOzBBdt53mj9FgNqDVYdyaNCxj6PITODjBdfRYuKVh1HFICUs/hbWXcPxB1bmsAvpmFI851F\nVG0rJPBmm4lczrpEr/ndWHRkvupIQoGkzCT6LOzOmfTTvNDiZUbUe0B1JI+yrEokcME8HI2bkjXA\nt37p8AdSzuLvBQaS+cDDGNOuEDj9c9VpPOreuiOZ0XU2JqOZEcuG8d6WibJIzI8kZ13m7oW9OJZ6\nlCcbPc2oRk+pjuRZVxeBGY2kT5goi8B0SJ4xcUNZw+/DHRJK0CcfQHa26jge1alSFxb3/olyoeUZ\nv+EVRq14GLvLrjqWKGbp9jQGLL6LfZf3MLLeg4xp7nvnYoM+moL58CGy7hmBs34D1XFEIUg5ixvS\nIqPIGnYvpt/P6f6GGNdTp1RdlvZZQcPSjZhz4Gv6LerJ5axLqmOJYpLpyGTID/3Zdn4rA2oNZtxt\nE3R/M4v/ZTxzmpC3J+AuVYqM515QHUcUkpSz+Ee2Bx9Bs1gInvwuuN2q43hcmZCyfN/zB+6s0pN1\nZ9fSdW4HjqT4xvXd4g92l50Ry4by29lf6V61F2+3m4TR4HtvgaEvjsGQmUn6S6+hRUapjiMKyfde\nmcLj3PHlyO5zN+ZDBwn4aanqOMUi2BLMp52n80Sj0RxLPUrXuR1Ye2aN6ljCQ+wuOw//MpLlJ3+m\nQ8VOfNjxU8xGs+pYHmdZ8QvWxQtwNG1O9t06v/e0n5NyFvly9YYYwZPeUZyk+BgNRp5vMZb3Ej4g\nw5FBv0U9mbVvpupYooh2X9zF7d+1Y9GR+dwafxufdZlJgClAdSzPy84m9D/PoBmNpMlOYLonz57I\nF1fNWmR37opl0wass79SHadYDbx5CN92X0CoJZQnEh9h3LqXcWu+dzjf1zndTt7e/F86f9eOvZd2\nM7T2vcy84xuCzEGqoxWL4A8nYT56BNuIB3DVrac6jigig+Yl149cuJCmOsI/io0N00XO4mI8foyo\njm0wOOwk/7gCV+06xfazvGGsj6QcYvCSuzmaeoQ7q/RkcoePCbYEK81UHLxhrD3twOX9PL78QbZf\n2EZcSDzvJEzyii05i2usjadOEn1bU7TQMC7/thktItLjP0NP9PKajo0N+9vHZOYs8s1dqTJpkz7C\nYLMRPnIYhnTvf/EXRdXI6vzQ5xdujb+NxUcX0Gt+V5IyfGMrU1/lcrv4YPskOn7bmu0XtnF3zYGs\nHrDeK4q5OIW+OAaDzUb62Nf8vph9hZSzKBB71zvIfPhxzIcPETp6FHjHgZdiEx0Ywzfd5zOg1mC2\nX9hGl7nt5Z7QXupo6hF6zu/Ky789T1hAONO7zmJyh4+JsPp2WQUs/wnrD4twNG9Jdr8BquMID5Fy\nFgWW8cLLOJo2J/D7uQR+/qnqOMUuwBTAewkf8EKLlzmTfpru33dm4eHvZUcxL+HW3Ezb9Qnt57Ri\n4+/r6V61F2sGbKRr5TtURyt+WVmEjnkGzWQi7c2J4GPXbPszKWdRcBYLV6Z+gTsmhtCXxmDevlV1\nomJnMBgY1egppnX+EpfbycifhtP9+86sP/ub6mh+7XTaKfot6sWYNU9jNVn5uNNnfHr7dGKCYlRH\nKxHBH7yP6fgxbCMfxFWnruo4woOknEWhuOPLceWDT8HhIHzkcAwpyaojlYjuVXvxc7/VdKl8Bxt/\nX0+P+V0YtLivHOouYZqm8fW+GbSZ3YI1p1dy+01dWD1gA72r9/W5Hb/+jvHkCYLffQtX6TJkPjNG\ndRzhYVLOotAcCR3IfOrfmE6eIGzUwz5//vmqmtG1+LLrLJbc9TO3xt/GLyd/ov03rXjo5xEcSz2q\nOp7P+z3jHIOX9OPJxEcxGAy8l/ABM7rNoUxIWdXRSlToC89hyMoi4+VxaOERquMID5NyFkWS+fRz\n2Fu3w7r0B4I+mKQ6TolqWrY53/dcwuw751Gv1C3MO/QtrWY14d+r/iWruouBpmnMPfgNbWY355eT\nP9GmfAKr+q9j4M1D/Ga2fFXAz0uxLl2CvWUrsvvcrTqOKAZSzqJoTCaufPgprjJlCRk3FvP6daoT\nlSiDwUD7ih35ud8qPsomFZgAABh+SURBVOn0ORXDbuKLPdNo9tUtjF//CqnZKaoj+oQTV44zYtkw\nHv5lJHaXnQlt3ubb7vMpH1ZBdbSSl5VF6H/+jWYykS6LwHyWlLMoMq10adI+ybnfc/gD92C4cEFx\nopJnNBjpVb0PawZs5K227xFhjeS9rRNpMrM+7299h0xHpuqIuuNwOVh0ZAF3L+pF05n1WXx0Ac3j\nWpLY/zfurTvS72bLVwVPfhfTiePY7n8Y1821VccRxUR2CCsAvew6o0rQ++8QOm4s9jYJpM6ZByZT\nob+X3sfa5rQxbdcnvL91IinZKZQJLsvTTZ9jUK2hWEwW1fGu4W1jfSz1KF/t/ZJZ+2dywXYegOZx\nLRlW+17uqt4Pk7HwryvVijrWxuPHiG7THHdEJMm/bUYLC/dgOt/hba/pv3OjHcKknAtAL0+4Mm43\n4cMGYP1pKRnPjCnSClJfGevU7BSmbHufT3Z+QKYzk8oRVXiu2Qv0rHaX19yu0BvG2u6ys/TYEr7c\n+wWrTycCEGmNpH/NQQypfQ81o2spzecpRRrr9HQi+/XEsmUTVz6aRvZd/Twbzod4w2s6P6ScPUQv\nT7hKhuTLRHVsg/H0KVK/mY+jbUKhvo+vjXVSZhLvbP4vX+79HKfbSd1S9Xm22fMkVOig/A5JKsf6\naMphZu77ktn7Z3LRdhGAlvGtGFr7Hu6s0pNAc6CSXMWl0GOdlUXE4H4ErFlFVt/+pE35RM4134Be\n3j+knD1EL0+4auatm4ns3hktIoLk5b/ijosv8Pfw1bE+nnqM/256nbkHv0FDI9gcwm3lWpNQsQMJ\nFTpQOaJqiZ9LLemxznZl8+PRxXy593N+PbMagOjAaO6uOYihte+helSNEstS0go11g4H4fcNwbrs\nR7K73smVaV+C2ffuRe1Jenn/kHL2EL084d4gcNrHhI15BkfzlqTMWwyWgp1n9fWx3nNxN1/v+5LE\nU8s5nHIo798rhlcioUJOUbcu34awgOI/p1hSY30k5RAz9k5nzv6vuJR1CYBW8a0ZWuceulXu7nOz\n5Osp8Fi7XIQ9MpLA7+dib5tA6sxvwGotvoA+Qi/vH1LOHqKXJ9wraBph999D4MLvyXzsSTJeerVA\nX+5PY30q7SSJJ5eTeGo5a06v4oo9FQCz0UzTss3zyrpe7C3Fcp66OMc63Z7GTyeW8uWez/nt7K8A\nxATGMKDWEIbUHkbVyOrF8nO9VYHGWtMIHT2KoJnTcTRrQcqc7yEkpHgD+gi9vH8USzlv3LiRJ554\ngtdff52EhL+eV1y4cCHTp0/HaDRy991306/fjRcv6GUg9ZDTWxjSrhDZqS3mo0dI/XI29i7d8v21\n/jrWTreTLUmbSTz1CytPLmfb+a1o5PwnWiqoFG3KJ5BQoQPtKnagTHAZj/xMT4x1SlYyB5MPcjB5\nPweS93Pw8n4OJh/gTPrpvM9pXa4tw+rcS5fKd2A1+efsL99jrWmEvDSG4I8/wFG/AanzFskuYAWg\nl/cPj5fzyZMneeONNzAajfTt2/cv5ZyZmUnv3r357rvvsFgs9O3bl5kzZxIZ+fe3btPLQOohpzcx\n7dlNVNf2aNZAkn9ZjfumSvn6OhnrHJezLrH61EpWnPqFladW8HvGubzH6sTUyztX3SyuRaELryBj\nfcl2KaeAL+/PLeIDHLy8n6TMv+6IFhcST42omjQs3ZgBtQZRJbJaofL5kvyOdfCE8YRMnICzZi1S\n5v+IFuMfN/LwFL28f9yonAu1qiA2NpbJkyfz/PPPX/fxHTt2UK9ePcLCcn5wo0aN2Lp1K+3bt///\n9u48PKrCXuP498yWTDKTZWICgkutQqJUChEslAYIBJCCLEJYFBBQWy0FF1osuLXScoUrVCRYQNkE\nhBhaLoobBZICVyAgqIglQWJBsRUCWSaZJJNZ+kcgGIFAQpKz5Pd5nnkmszGvvxnnnXPmzJn63J3Q\nMX+7H1Hywlycj00i4qH7KXx7s3xmVgeu0BiGtBnGkDbDCAaD/PPM59WrwPf8+0MOnT5I2oGXAAiz\nhBFudeC0OXHaInDanDhsTpxWZ9Xf545tzhrXuaGyJZWlCg5bBE6rE7vFzsmyk2eXfs8VcQ65BYer\nt6j+ruudN9D7hj60jU4g3pVA2+h42kbHExEiS3r1YV/4MuFzZ+O/8QcUZWyUYm6m6lXOdru91svz\n8/NxuVzVp10uF6ea4V6jRJXye8di3f0hoevW4HhuRtUuB0WdKYrCbTHtuC2mHZM6TsFT6WHXNzvJ\n/Gorn58+RInXjbvSjdvr5j+l/8bjq99eyUyKiUAwUPO+Ubgx4gfc0aIzbaOrCjjelcAt0W1xWB0N\n8Z8ngNCVy3D84Wn817aicP1bBFpeq3YkoZLLlnNGRgYZGRk1zps8eTJJSUlXfCdXsuY8OjoMi0X7\ne/6pbTWEqMXSJfDZJ9iXvYq9b28YOfKyN5FZX46TG1sNY1SnYRe91Bfw4a5wU1xRTHFFMW7v+b8v\ndvju5S3CW3Bb7G3Vh/iYeOzW2t+Uiytzyef16tUw7XGIjcW8bSsxCcbY8Ypa9P76cdlyTk1NvezG\nXN8XFxdHfv751V8nT56kQ4cOtd6moED7+x7Wy+cYWmVespKoPj3ggQcpvKEN/lsuvaWuzLqhWAjD\nRZjJRctQ4CLfVrqSWZcU+ihBHo+rdalZ297dRMQD4wk6IyhctwF/TGuQ53+96eX1o7Y3EI2y/8Af\n//jHHDx4kOLiYkpLS9m/fz+dOnVqjLsSOuK/pQ0lf16AqbSEiHGjMH11XO1IQqjOmrWNiF+Mh5BQ\nitaux397e7UjCQ2oVzlnZWUxduxYduzYwbx585g4cSIAS5Ys4cCBA4SGhjJ16lQeeOABJkyYwKRJ\nk6o3DhPNW8WQYXgmP47liyNE39ULy0d71Y4khGosu3cRef9oUBSKXl+Lr/NP1I4kNEJ2QlIHellV\nogehry3C8fTvwGbDvWARFYPvqXG5zLrpyKybzndnbfnkAJH33I1S5qF4+Rq8/fqrnM449PKcbvLV\n2kJcTvmDD1O8Op2g2ULEQ+MJe+lF0Mb7RCEanTnnMJEjh6KUuHEvXCLFLC4g5SxU403pR+Gmzfhb\nX0f4rOdxTnkEKirUjiVEozJ9mUfk8EGYzpyhZN4CKoYOVzuS0CApZ6Eqf7sfUfB+JpWJdxCa/gaR\nqYNRzpxWO5YQjePrr4lKHYz52/9QMvN/KL9vnNqJhEZJOQvVBVu0oHDDu5QPGopt94dE9e8NOTlq\nxxKiQSmnTkFKCubjxyh98inKfjlJ7UhCw6SchTbY7biXLKf0sd9g+TIPunTBunO72qmEaBBKYQFR\nI4ZATg6eX03B88Q0tSMJjZNyFtphMuGZ8SzFL/8FSkuJHDGE0DdWqZ1KiKtTUkLk6OFYDh2Ehx+m\n9LmZoChqpxIaJ+UsNKdi1H3w978TdDpxPjaJ8OefhUDg8jcUQmvKy4m8fzTWj/ZSPmwELFwoxSyu\niJSz0KYePSh8byu+m28hLO0lIh4YBx7t7+JViHOUb78lcsxIbDv+QUX/gbgXLAKTvOSKKyPPFKFZ\n/h/eQuG7W/B2SyLknbeIGtIf07cX/m6wEFoT8n9/xdX9TmzbM6lI6UvxkuVgqdePAIpmSspZaFow\n2kVR+gbKRo/B+vEBovolY/7soNqxhLgo5fRpnA+NJ+IXE1DKy3HPmkPx6jflN8xFnUk5C+2z2Sh5\naSElT/8B8zcniB7YF9vm99ROJUQNtvffxdX9J4Ru/BuVne6kIPP/KX/wYVmVLepFnjVCHxSFsimP\nU7R0FQQDRIwbjX3xQtnlp1CdUlSIc/LDRI4bhVJUSMkzz1P49gf4f3iL2tGEjkk5C13x3j2Ywo3v\nEbgmFscz03E8+QT4fGrHEs2UNXMr0T26Epr+BpXtO1CwZQdlkx8Ds1ntaELnpJyF7vg6JFL4QSa+\ndrdjX7GUyHuHoxQXqR1LNCclJTh++zhRI4diOvktpdNmUPjeVvwJt6qdTBiElLPQpUDr6yh8+30q\n+vTDlrWNqAF9MB37l9qxRDNg/XAnrp4/xb5yKb6EWyl8fxue3/wOrFa1owkDkXIWuhV0OCl+fR2e\nX/4KS85hovv3wrJ3j9qxhFGVlRH+zO+IHDoA09fH8Ux5goK/b8fXvoPayYQBSTkLfTObKZ35Au7Z\n81AKCoi6ZyBhs/+E4i5WO5kwEMtHe4nu/TPCFr+C/4c3U7hpM6VP/16+IiUajZSzMITyCQ9StCaD\nYEQk4XNn4+rcHvuiNCgvVzua0LOKCsL/9AeiBvTB8sURPL94hIKtO/F1ulPtZMLgpJyFYVT2SuF0\n9ieUzngWKn04np2Bq2ti1Y9nyBbdoo7MBz8lum9PwubPJXDd9RRueIfSP86GsDC1o4lmQMpZGEt4\nOJ7HfsOZvZ/gmfQoptP5OB+bRHSPLtg2vSXfixaXV1lJ2NzZRPfrieWfhygbN5GCrA+p7JakdjLR\njEg5C0MKumIofW4mZ/Z8TNnYCZjzjhI5cQxRdyVj3Z6ldjyhUeacw0T9PIXw2X8iEBtH4bq/UvLi\nSwQdTrWjiWZGylkYWuDaVpTMnU/BzmzKB9+D9cB+ooYPInL4YCwHPlI7ntAKvx972nyiU5KwfnKA\n8hGjKdi+m8pefdROJpopKWfRLPhvboP71RUUbNmON7k3tu2ZRPdLJmLiWMxHctWOJ1RkyjtK1KC7\ncDz/DEFnBEUr1+JOW0wwMkrtaKIZk3IWzYqvfQeK0jdQuOEdKu/oTMimjUQn3Ynj8V9jOvG12vFE\nU6qoIPS1Rbh6dcO6dw/lg4ZyZkc23v4D1E4mhJSzaJ4quyVR+O4Wilauxd+mLfY1r+Pq0pHwZ2eg\nnD6tdjzRiMxHjxD++6eJ6ZCAc8Y0giEhFC9Zjvu1lQRjYtSOJwQg5SyaM0XB238ABVm7KH75LwRi\n4whblIarc3vCXnwBpcStdkLRUCoqCPlbBpFDB+Dqegdhr7wMgOeRyRRs30PFkGEqBxSiJiUY1MZ3\nS06d0v4LYWysUxc5jUCVWVdUYH99GWF//l9M+fkErrkGz+O/pWzcREPvCcrIz2vzkVxCV60g9M03\nMJ05A4A3qQflY8dT0X9gkz+uRp61luhlzrGxl/4WgCw5C3FOSAhlDz3CmexPKJ02A8orcDz1JK6f\n3kHIujXg96udUFyJ8nJC1qcTObg/rm6dCFuUBiYTnl8/xpnd+yn669tVS8oGfsMl9E+WnOtAL+/G\njEALs1ZOnyZs/lzsy19FqajAl3ArpdOfxXvXz0FRVM3WkLQw64ZgzjlM6OoVhL65FlNBAQDe7smU\njRuP964BYLOpnNA4s9Y6vcxZlpyFqIdgTAylz8/izK79lN07FnNuDpH3jybq5ylYd26XvY1pQVkZ\nIW+uJerufriS7iRs8StgtuCZ8gSn93xM0fqNeAcN1UQxC1EXFrUDCKF1geuup+SlhZT9agrhL/yR\nkE0bibpnIP5WrfH27EVlcm+83XsSjHapHbXZMB/+J6GrlhP65jpMRYUAeHv2omzsBLz9+ksZC92T\n1dp1oJdVJUag5VlbDnyEffFCbFnbqjcyCppM+Dom4u3ZG2+vFHwd7wCLPt77annWNXg8hLy1Afuq\nFVjP/m63P64F5feOpfzesQR+cJPKAS9PN7PWOb3MubbV2lLOdaCXB9wIdDFrvx/Lpx9jy9yKLXMr\nln3ZKGc3GgtERlHZvSfe5N54k3sTaH2dymEvTeuzNn9+CPuq5YRkpGMqLiKoKFQm965aSu57F1it\nake8YlqftVHoZc5Szg1ELw+4Eehx1kpxEdYd26vKOmsr5uPHqi/ztY2vLurKrj8Du129oN+jyVmX\nllYtJb++HOtHewHwt2hJ+b1jKL/vfgI33KhywPrR5KwNSC9zlnJuIHp5wI1A97MOBjEf/QJb5has\nmVuxfbgTxeOpuigkhMouP8WbnIK3Vwr++ARVt/7WxKx9PszHvsScm4vtH9uqlpLdxQQVBW/vPpSP\nGY+3Tz9dLSVfjCZm3QzoZc5Szg1ELw+4ERhu1hUVWPfsOr8K/PPPqi/yX9uqaolapQ3LmnTWXi/m\nL/Mw5x7GknP47HEO5qNHULze6qv5W15b9VnyfeMIXH9D02RrAoZ7XmuUXuYs5dxA9PKAG4HRZ236\n9j9VS9RZW7nkhmXJKfgSG3/DskaZdXk55qNfYMk9jDnnMJbcHMy5hzHnHUXx+WpcNRgWji8+Hn/b\nBHxt4vHd3p7KpB662aCuLoz+vNYKvcy5Uco5OzubRx99lFmzZpGcnHzB5e3atSMxMbH69IoVKzCb\nzZf89/QySD3kNIJmNetAoGrDsm1bLr5hWVKPqi3A2yYQdDrPHxxOqOX/qSt1VbP2eLB8kXu+gM8u\nDZv/9SVKIFDjqgFnBP74BHzxCVVFfLaQA61ag6l57HKhWT2vVaSXOddWzvV6a3r8+HGWL19eo3y/\nz+FwsGrVqvr880I0LyYTvg6J+Dok4nli2gUbloVs2kjIpo0XvWkwLJyA00nQ4Thb2hEEHecLPHDu\n9HcvP3eZo+o0TmvVDlVq+dxbKXFjzs3BnJtTY3W06atjKN97fx+Ijqbyzi742ybgj4/H1zYBf3wC\ngRYtDbVnNSEaU73KOTY2lrS0NJ566qmGziNEsxeMiMQ74G68A+6u2rAs7wusWZmY//0NirsYxe1G\nKXGfPS5BcRdjKi5G+eYESllZve7zGovlgnIPOJ0oPh/mI7mYL/Jb14HYOCq7JeFve76AfW0TCF5z\njZSwEFepXuVsv4KvgXi9XqZOncqJEyfo168fEyZMqPX60dFhWCxXv4qusdW2GkI0LJn1WXGJ0OXS\na6lqqKwEtxuKi88ff/9wkfOVswfcbvjm66rzz62Wbt0a+vSB2247f7j1VkwxMch+uOpOntdNQ+9z\nvmw5Z2RkkJGRUeO8yZMnk5SUVOvtpk2bxqBBg1AUhTFjxtCpUyduv/32S16/oMBzhZHVo5fPMYxA\nZn01rBAeU3VoeflrX3TWwSB4PFXHDseFNwoA8vjUmTyvm4Ze5nxVnzmnpqaSmppa5zsdPXp09d9d\nunQhNze31nIWQmiIokB4uNophGi2GmUTyby8PKZOnUowGMTn87F//37atGnTGHclhBBCGE69PnPO\nyspi6dKl5OXlcejQIVatWsWyZctYsmQJnTt3pmPHjrRs2ZLhw4djMpno1asX7du3b+jsQgghhCHJ\nTkjqQC+fYxiBzLrpyKybjsy6aehlzrV95tw8vvkvhBBC6IiUsxBCCKExUs5CCCGExkg5CyGEEBoj\n5SyEEEJojJSzEEIIoTFSzkIIIYTGSDkLIYQQGqOZnZAIIYQQooosOQshhBAaI+UshBBCaIyUsxBC\nCKExUs5CCCGExkg5CyGEEBoj5SyEEEJojJRzHfh8Pp588klGjx7NiBEj2Ldvn9qRDC07O5uuXbuS\nmZmpdhRDmjVrFiNHjmTUqFF8+umnascxvNzcXFJSUli9erXaUQxtzpw5jBw5kmHDhrF582a149Sb\nRe0AerJx40bsdjtr167lyJEjTJ8+nfXr16sdy5COHz/O8uXLSUxMVDuKIWVnZ3Ps2DHS09M5evQo\nM2bMID09Xe1YhuXxeJg5cyZdu3ZVO4qh7d69myNHjpCenk5BQQFDhw6lb9++aseqF1lyroNBgwYx\nffp0AFwuF4WFhSonMq7Y2FjS0tJwOp1qRzGkXbt2kZKSAsDNN99MUVERJSUlKqcyLpvNxquvvkpc\nXJzaUQytc+fOzJ8/H4CIiAjKysrw+/0qp6ofKec6sFqthISEALBy5UoGDhyociLjstvtmM1mtWMY\nVn5+PtHR0dWnXS4Xp06dUjGRsVksFkJDQ9WOYXhms5mwsDAA1q9fT/fu3XX7OiKrtS8hIyODjIyM\nGudNnjyZpKQk1qxZw6FDh1i0aJFK6YyltlmLpiF78RVGsmXLFtavX8+yZcvUjlJvUs6XkJqaSmpq\n6gXnZ2RksG3bNl555RWsVqsKyYznUrMWjScuLo78/Pzq0ydPniQ2NlbFREI0jB07drBo0SJee+01\nXX8sJqu16+Crr75i3bp1pKWlVa/eFkKPunXrxgcffADAoUOHiIuLw+FwqJxKiKvjdruZM2cOixcv\nJioqSu04V0V+laoO5s2bxzvvvEOrVq2qz1u6dCk2m03FVMaUlZXF0qVLycvLw+VyERsbq+tVVFr0\n4osvsm/fPhRF4bnnniMhIUHtSIb12WefMXv2bE6cOIHFYqFFixYsWLBA9wWiNenp6SxYsICbbrqp\n+rzZs2fXeM3WCylnIYQQQmNktbYQQgihMVLOQgghhMZIOQshhBAaI+UshBBCaIyUsxBCCKExUs5C\nCCGExkg5CyGEEBoj5SyEEEJozH8B8hu8PNsW71cAAAAASUVORK5CYII=\n","text/plain":["<matplotlib.figure.Figure at 0x7f3297ac0490>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"dlTIXQJsis4t","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"base_uri":"https://localhost:8080/","height":1343},"outputId":"9096eec0-8f5c-4e82-f142-d9e0b3903d41","executionInfo":{"status":"ok","timestamp":1525024577128,"user_tz":-120,"elapsed":465,"user":{"displayName":"mark nabil","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s128","userId":"100349270716175055813"}}},"cell_type":"code","source":["help( fftpack.fft)"],"execution_count":7,"outputs":[{"output_type":"stream","text":["Help on function fft in module scipy.fftpack.basic:\n","\n","fft(x, n=None, axis=-1, overwrite_x=False)\n","    Return discrete Fourier transform of real or complex sequence.\n","    \n","    The returned complex array contains ``y(0), y(1),..., y(n-1)`` where\n","    \n","    ``y(j) = (x * exp(-2*pi*sqrt(-1)*j*np.arange(n)/n)).sum()``.\n","    \n","    Parameters\n","    ----------\n","    x : array_like\n","        Array to Fourier transform.\n","    n : int, optional\n","        Length of the Fourier transform.  If ``n < x.shape[axis]``, `x` is\n","        truncated.  If ``n > x.shape[axis]``, `x` is zero-padded. The\n","        default results in ``n = x.shape[axis]``.\n","    axis : int, optional\n","        Axis along which the fft's are computed; the default is over the\n","        last axis (i.e., ``axis=-1``).\n","    overwrite_x : bool, optional\n","        If True, the contents of `x` can be destroyed; the default is False.\n","    \n","    Returns\n","    -------\n","    z : complex ndarray\n","        with the elements::\n","    \n","            [y(0),y(1),..,y(n/2),y(1-n/2),...,y(-1)]        if n is even\n","            [y(0),y(1),..,y((n-1)/2),y(-(n-1)/2),...,y(-1)]  if n is odd\n","    \n","        where::\n","    \n","            y(j) = sum[k=0..n-1] x[k] * exp(-sqrt(-1)*j*k* 2*pi/n), j = 0..n-1\n","    \n","        Note that ``y(-j) = y(n-j).conjugate()``.\n","    \n","    See Also\n","    --------\n","    ifft : Inverse FFT\n","    rfft : FFT of a real sequence\n","    \n","    Notes\n","    -----\n","    The packing of the result is \"standard\": If ``A = fft(a, n)``, then\n","    ``A[0]`` contains the zero-frequency term, ``A[1:n/2]`` contains the\n","    positive-frequency terms, and ``A[n/2:]`` contains the negative-frequency\n","    terms, in order of decreasingly negative frequency. So for an 8-point\n","    transform, the frequencies of the result are [0, 1, 2, 3, -4, -3, -2, -1].\n","    To rearrange the fft output so that the zero-frequency component is\n","    centered, like [-4, -3, -2, -1,  0,  1,  2,  3], use `fftshift`.\n","    \n","    For `n` even, ``A[n/2]`` contains the sum of the positive and\n","    negative-frequency terms.  For `n` even and `x` real, ``A[n/2]`` will\n","    always be real.\n","    \n","    Both single and double precision routines are implemented.  Half precision\n","    inputs will be converted to single precision.  Non floating-point inputs\n","    will be converted to double precision.  Long-double precision inputs are\n","    not supported.\n","    \n","    This function is most efficient when `n` is a power of two, and least\n","    efficient when `n` is prime.\n","    \n","    If the data type of `x` is real, a \"real FFT\" algorithm is automatically\n","    used, which roughly halves the computation time.  To increase efficiency\n","    a little further, use `rfft`, which does the same calculation, but only\n","    outputs half of the symmetrical spectrum.  If the data is both real and\n","    symmetrical, the `dct` can again double the efficiency, by generating\n","    half of the spectrum from half of the signal.\n","    \n","    Examples\n","    --------\n","    >>> from scipy.fftpack import fft, ifft\n","    >>> x = np.arange(5)\n","    >>> np.allclose(fft(ifft(x)), x, atol=1e-15)  # within numerical accuracy.\n","    True\n","\n"],"name":"stdout"}]},{"metadata":{"id":"dAaTUqOjjKCU","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"base_uri":"https://localhost:8080/","height":181},"outputId":"ce690d09-24ee-49de-9202-395f585e9996","executionInfo":{"status":"ok","timestamp":1525029744940,"user_tz":-120,"elapsed":656,"user":{"displayName":"mark nabil","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s128","userId":"100349270716175055813"}}},"cell_type":"code","source":["\n"," "],"execution_count":10,"outputs":[{"output_type":"stream","text":["0\n","1\n","2\n","3\n","4\n","5\n","6\n","7\n","8\n"],"name":"stdout"}]},{"metadata":{"id":"zDiaVmSy3HXu","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["def pol2cart(rho, phi):\n","    x = rho * np.cos(phi)\n","    y = rho * np.sin(phi)\n","    return(x, y)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"zzT-QTNf3JB_","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"base_uri":"https://localhost:8080/","height":243},"outputId":"3d0ab8ac-7069-4021-dec3-c950545d0836","executionInfo":{"status":"error","timestamp":1525038104921,"user_tz":-120,"elapsed":464,"user":{"displayName":"mark nabil","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s128","userId":"100349270716175055813"}}},"cell_type":"code","source":["num = []\n","\n","print(type(num))\n","\n","num.append(4)\n","print(num)"],"execution_count":35,"outputs":[{"output_type":"stream","text":["<type 'list'>\n"],"name":"stdout"},{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m\u001b[0m","\u001b[0;31mTypeError\u001b[0mTraceback (most recent call last)","\u001b[0;32m<ipython-input-35-d614ecfc80ed>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnum\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mnum\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0;32mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnum\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: append() takes exactly one argument (2 given)"]}]},{"metadata":{"id":"lwti-8HlWW7Q","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"base_uri":"https://localhost:8080/","height":55},"outputId":"4c05075e-329d-4d73-d285-76bc029c2610","executionInfo":{"status":"ok","timestamp":1525038193667,"user_tz":-120,"elapsed":512,"user":{"displayName":"mark nabil","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s128","userId":"100349270716175055813"}}},"cell_type":"code","source":["num=[]\n","for s in range(270):\n","  num.append(pol2cart(s,30))\n","\n","print num\n","  #print(\"s is =%d \",s,\"while its polar is %f\",pol2cart(s,30))\n"],"execution_count":37,"outputs":[{"output_type":"stream","text":["[(0.0, -0.0), (0.15425144988758405, -0.9880316240928618), (0.3085028997751681, -1.9760632481857237), (0.46275434966275214, -2.9640948722785856), (0.6170057995503362, -3.9521264963714473), (0.7712572494379202, -4.940158120464309), (0.9255086993255043, -5.928189744557171), (1.0797601492130884, -6.9162213686500325), (1.2340115991006724, -7.904252992742895), (1.3882630489882564, -8.892284616835756), (1.5425144988758404, -9.880316240928618), (1.6967659487634246, -10.86834786502148), (1.8510173986510086, -11.856379489114342), (2.0052688485385928, -12.844411113207205), (2.1595202984261768, -13.832442737300065), (2.3137717483137608, -14.820474361392927), (2.4680231982013447, -15.80850598548579), (2.6222746480889287, -16.79653760957865), (2.7765260979765127, -17.78456923367151), (2.9307775478640967, -18.772600857764374), (3.0850289977516807, -19.760632481857236), (3.239280447639265, -20.7486641059501), (3.393531897526849, -21.73669573004296), (3.547783347414433, -22.724727354135823), (3.702034797302017, -23.712758978228685), (3.856286247189601, -24.700790602321547), (4.0105376970771855, -25.68882222641441), (4.164789146964769, -26.676853850507268), (4.3190405968523535, -27.66488547460013), (4.473292046739937, -28.652917098692992), (4.6275434966275215, -29.640948722785854), (4.781794946515105, -30.628980346878716), (4.9360463964026895, -31.61701197097158), (5.090297846290274, -32.60504359506444), (5.2445492961778575, -33.5930752191573), (5.398800746065442, -34.58110684325016), (5.5530521959530255, -35.56913846734302), (5.70730364584061, -36.557170091435886), (5.861555095728193, -37.54520171552875), (6.015806545615778, -38.53323333962161), (6.170057995503361, -39.52126496371447), (6.324309445390946, -40.509296587807334), (6.47856089527853, -41.4973282119002), (6.632812345166114, -42.48535983599306), (6.787063795053698, -43.47339146008592), (6.941315244941282, -44.46142308417878), (7.095566694828866, -45.449454708271645), (7.24981814471645, -46.43748633236451), (7.404069594604034, -47.42551795645737), (7.558321044491619, -48.41354958055023), (7.712572494379202, -49.401581204643094), (7.866823944266787, -50.389612828735956), (8.021075394154371, -51.37764445282882), (8.175326844041955, -52.36567607692168), (8.329578293929538, -53.353707701014535), (8.483829743817122, -54.3417393251074), (8.638081193704707, -55.32977094920026), (8.79233264359229, -56.31780257329312), (8.946584093479874, -57.305834197385984), (9.10083554336746, -58.293865821478846), (9.255086993255043, -59.28189744557171), (9.409338443142627, -60.26992906966457), (9.56358989303021, -61.25796069375743), (9.717841342917795, -62.245992317850295), (9.872092792805379, -63.23402394194316), (10.026344242692963, -64.22205556603602), (10.180595692580548, -65.21008719012887), (10.334847142468131, -66.19811881422174), (10.489098592355715, -67.1861504383146), (10.643350042243299, -68.17418206240747), (10.797601492130884, -69.16221368650032), (10.951852942018467, -70.15024531059319), (11.106104391906051, -71.13827693468605), (11.260355841793636, -72.12630855877892), (11.41460729168122, -73.11434018287177), (11.568858741568803, -74.10237180696464), (11.723110191456387, -75.0904034310575), (11.877361641343972, -76.07843505515036), (12.031613091231556, -77.06646667924322), (12.18586454111914, -78.05449830333609), (12.340115991006723, -79.04252992742894), (12.494367440894308, -80.03056155152181), (12.648618890781892, -81.01859317561467), (12.802870340669475, -82.00662479970754), (12.95712179055706, -82.9946564238004), (13.111373240444644, -83.98268804789326), (13.265624690332228, -84.97071967198612), (13.419876140219811, -85.95875129607897), (13.574127590107397, -86.94678292017184), (13.72837903999498, -87.9348145442647), (13.882630489882564, -88.92284616835757), (14.036881939770149, -89.91087779245042), (14.191133389657733, -90.89890941654329), (14.345384839545316, -91.88694104063615), (14.4996362894329, -92.87497266472901), (14.653887739320485, -93.86300428882187), (14.808139189208068, -94.85103591291474), (14.962390639095652, -95.8390675370076), (15.116642088983237, -96.82709916110046), (15.270893538870821, -97.81513078519332), (15.425144988758404, -98.80316240928619), (15.579396438645988, -99.79119403337904), (15.733647888533573, -100.77922565747191), (15.887899338421157, -101.76725728156477), (16.042150788308742, -102.75528890565764), (16.196402238196324, -103.74332052975049), (16.35065368808391, -104.73135215384336), (16.504905137971495, -105.71938377793622), (16.659156587859076, -106.70741540202907), (16.81340803774666, -107.69544702612194), (16.967659487634243, -108.6834786502148), (17.12191093752183, -109.67151027430766), (17.276162387409414, -110.65954189840052), (17.430413837296996, -111.64757352249339), (17.58466528718458, -112.63560514658624), (17.738916737072167, -113.62363677067911), (17.89316818695975, -114.61166839477197), (18.047419636847334, -115.59970001886484), (18.20167108673492, -116.58773164295769), (18.3559225366225, -117.57576326705056), (18.510173986510086, -118.56379489114342), (18.66442543639767, -119.55182651523629), (18.818676886285253, -120.53985813932914), (18.97292833617284, -121.52788976342201), (19.12717978606042, -122.51592138751487), (19.281431235948006, -123.50395301160773), (19.43568268583559, -124.49198463570059), (19.589934135723173, -125.48001625979346), (19.744185585610758, -126.46804788388631), (19.898437035498343, -127.45607950797917), (20.052688485385925, -128.44411113207204), (20.20693993527351, -129.4321427561649), (20.361191385161096, -130.42017438025775), (20.515442835048677, -131.40820600435063), (20.669694284936263, -132.3962376284435), (20.823945734823845, -133.38426925253634), (20.97819718471143, -134.3723008766292), (21.132448634599015, -135.36033250072208), (21.286700084486597, -136.34836412481494), (21.440951534374182, -137.3363957489078), (21.595202984261768, -138.32442737300065), (21.74945443414935, -139.31245899709353), (21.903705884036935, -140.30049062118638), (22.05795733392452, -141.28852224527924), (22.212208783812102, -142.2765538693721), (22.366460233699687, -143.26458549346498), (22.520711683587272, -144.25261711755783), (22.674963133474854, -145.2406487416507), (22.82921458336244, -146.22868036574354), (22.98346603325002, -147.21671198983643), (23.137717483137607, -148.20474361392928), (23.291968933025192, -149.19277523802214), (23.446220382912774, -150.180806862115), (23.60047183280036, -151.16883848620785), (23.754723282687944, -152.15687011030073), (23.908974732575526, -153.14490173439359), (24.06322618246311, -154.13293335848644), (24.217477632350697, -155.1209649825793), (24.37172908223828, -156.10899660667218), (24.525980532125864, -157.09702823076503), (24.680231982013446, -158.0850598548579), (24.83448343190103, -159.07309147895074), (24.988734881788616, -160.06112310304363), (25.142986331676198, -161.04915472713648), (25.297237781563783, -162.03718635122934), (25.45148923145137, -163.0252179753222), (25.60574068133895, -164.01324959941508), (25.759992131226536, -165.00128122350793), (25.91424358111412, -165.9893128476008), (26.068495031001703, -166.97734447169364), (26.22274648088929, -167.96537609578652), (26.376997930776874, -168.95340771987938), (26.531249380664455, -169.94143934397223), (26.68550083055204, -170.9294709680651), (26.839752280439622, -171.91750259215794), (26.994003730327208, -172.90553421625083), (27.148255180214793, -173.89356584034368), (27.302506630102375, -174.88159746443654), (27.45675807998996, -175.8696290885294), (27.611009529877546, -176.85766071262228), (27.765260979765127, -177.84569233671513), (27.919512429652713, -178.833723960808), (28.073763879540298, -179.82175558490084), (28.22801532942788, -180.80978720899373), (28.382266779315465, -181.79781883308658), (28.53651822920305, -182.78585045717944), (28.690769679090632, -183.7738820812723), (28.845021128978217, -184.76191370536517), (28.9992725788658, -185.74994532945803), (29.153524028753385, -186.73797695355088), (29.30777547864097, -187.72600857764374), (29.46202692852855, -188.71404020173662), (29.616278378416137, -189.70207182582948), (29.770529828303722, -190.69010344992233), (29.924781278191304, -191.6781350740152), (30.07903272807889, -192.66616669810804), (30.233284177966475, -193.65419832220093), (30.387535627854056, -194.64222994629378), (30.541787077741642, -195.63026157038664), (30.696038527629224, -196.6182931944795), (30.85028997751681, -197.60632481857238), (31.004541427404394, -198.59435644266523), (31.158792877291976, -199.58238806675809), (31.31304432717956, -200.57041969085094), (31.467295777067147, -201.55845131494382), (31.62154722695473, -202.54648293903668), (31.775798676842314, -203.53451456312953), (31.9300501267299, -204.5225461872224), (32.084301576617484, -205.51057781131527), (32.238553026505066, -206.49860943540813), (32.39280447639265, -207.48664105950098), (32.54705592628024, -208.47467268359384), (32.70130737616782, -209.46270430768672), (32.8555588260554, -210.45073593177958), (33.00981027594299, -211.43876755587243), (33.16406172583057, -212.4267991799653), (33.31831317571815, -213.41483080405814), (33.47256462560574, -214.40286242815102), (33.62681607549332, -215.39089405224388), (33.781067525380905, -216.37892567633673), (33.93531897526849, -217.3669573004296), (34.089570425156076, -218.35498892452247), (34.24382187504366, -219.34302054861533), (34.39807332493124, -220.33105217270818), (34.55232477481883, -221.31908379680104), (34.70657622470641, -222.30711542089392), (34.86082767459399, -223.29514704498678), (35.01507912448158, -224.28317866907963), (35.16933057436916, -225.2712102931725), (35.323582024256744, -226.25924191726537), (35.47783347414433, -227.24727354135823), (35.632084924031915, -228.23530516545108), (35.7863363739195, -229.22333678954394), (35.940587823807085, -230.21136841363682), (36.09483927369467, -231.19940003772967), (36.24909072358225, -232.18743166182253), (36.40334217346984, -233.17546328591538), (36.55759362335742, -234.16349491000824), (36.711845073245, -235.15152653410112), (36.86609652313259, -236.13955815819398), (37.02034797302017, -237.12758978228683), (37.174599422907754, -238.1156214063797), (37.32885087279534, -239.10365303047257), (37.483102322682925, -240.09168465456543), (37.637353772570506, -241.07971627865828), (37.79160522245809, -242.06774790275114), (37.94585667234568, -243.05577952684402), (38.10010812223326, -244.04381115093688), (38.25435957212084, -245.03184277502973), (38.40861102200843, -246.01987439912259), (38.56286247189601, -247.00790602321547), (38.71711392178359, -247.99593764730832), (38.87136537167118, -248.98396927140118), (39.02561682155876, -249.97200089549403), (39.179868271446345, -250.96003251958692), (39.334119721333934, -251.94806414367977), (39.488371171221516, -252.93609576777263), (39.6426226211091, -253.92412739186548), (39.79687407099669, -254.91215901595834), (39.95112552088427, -255.90019064005122), (40.10537697077185, -256.8882222641441), (40.25962842065944, -257.87625388823693), (40.41387987054702, -258.8642855123298), (40.5681313204346, -259.85231713642264), (40.72238277032219, -260.8403487605155), (40.87663422020977, -261.8283803846084), (41.030885670097355, -262.81641200870126), (41.185137119984944, -263.8044436327941), (41.339388569872526, -264.792475256887), (41.49364001976011, -265.78050688097983)]\n"],"name":"stdout"}]},{"metadata":{"id":"zeA2y6_bXHKB","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"base_uri":"https://localhost:8080/","height":35},"outputId":"93e943e4-2da7-4816-dd66-4bd7471d1a4e","executionInfo":{"status":"ok","timestamp":1525038283809,"user_tz":-120,"elapsed":475,"user":{"displayName":"mark nabil","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s128","userId":"100349270716175055813"}}},"cell_type":"code","source":["np.sin(30)"],"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-0.9880316240928618"]},"metadata":{"tags":[]},"execution_count":39}]},{"metadata":{"id":"MvewKVIB9SeU","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"base_uri":"https://localhost:8080/","height":35},"outputId":"44b018bf-025e-4e75-be4a-afbe18d9a00d","executionInfo":{"status":"ok","timestamp":1525031565561,"user_tz":-120,"elapsed":650,"user":{"displayName":"mark nabil","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s128","userId":"100349270716175055813"}}},"cell_type":"code","source":["li = [ \" abc \" , 34 , 4.34 , 23]\n","li[0]"],"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["' abc '"]},"metadata":{"tags":[]},"execution_count":28}]},{"metadata":{"id":"9OHQCk506XVi","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"base_uri":"https://localhost:8080/","height":382},"outputId":"b8ce59df-172b-4d1a-b42e-cab3637a0bc3","executionInfo":{"status":"ok","timestamp":1525038401778,"user_tz":-120,"elapsed":542,"user":{"displayName":"mark nabil","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s128","userId":"100349270716175055813"}}},"cell_type":"code","source":["theta=30\n","r=36\n","ax = plt.subplot(111, projection='polar')\n","ax.plot(theta, r)\n","ax.set_rmax(2)\n","ax.set_rticks([0.5, 1, 1.5, 2])  # less radial ticks\n","#ax.set_rlabel_position(-22.5)  # get radial labels away from plotted line\n","ax.grid(True)\n","\n","ax.set_title(\"A line plot on a polar axis\", va='bottom')\n","plt.show()"],"execution_count":44,"outputs":[{"output_type":"display_data","data":{"image/png":"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\ne++9jd9fe+21OPbYY3HXXXdh9erV2HHHHSfc/21vexuuvPJKxHGMu+++G+eccw4ef/zxlp5bQAOR\nsugR/uu//gsrVqxoiDEAqKqKv/3bv8V//ud/LuqxVVXFypUrcdtttwEAHMfBhRdeOG1aAODCEscx\ntm7dimeffbYRsScccsghuOOOOxBFEer1Ov7jP/6jsUGoqioqlcqUxzzooIPw61//unEJf9ttt+Gg\ngw6CqrYeU2zbtg3vete7oOs6nn/+eWzatAn1en3a27700kt47rnnAAAPPvggli9f3lj77bffDoBH\nwg899BAOOeSQBT/P5PvtsssuGBwcxPDwMO6//37UajUAwPPPP4+f/vSnuOiii3DyySfj8ssvn3Df\noaEhfOYzn0G1WoUsy/jrv/5rSJLU8nsjoIEQ5B7h7rvvxuGHHz7l50cccQTuvvvuRT/+JZdcgqef\nfhpHHnkkjj32WOy6667Yeeedp73tHnvsgeOPPx4f/vCH8alPfQp77LHHhN9/6lOfwk477YQPf/jD\nOO6443DIIYc0qg1WrVqFs88+GzfddNOE++y00064/PLLsXbtWhx55JF4+umn8Y//+I/zeg2nnnoq\nbrvtNhx11FH4wQ9+gPPPPx8//vGPcf/990+57b777oubb74Zhx12GH72s5/h3HPPBQCcddZZGBsb\nw5FHHok1a9bgtNNOwz777LPg52nmIx/5CEZGRnDEEUfgnHPOwVlnnYXXXnsNV1xxBb761a/i/PPP\nh2maOPnkk/HnP/8ZDz/8cOO+g4OD+OAHP4jjjjsORx99NM4++2ysW7duXu+PIH0kxoQfsqB9HHbY\nYVi/fv2UqDhL3HXXXbjnnntw8803p70UQZ8hImSBQCAgghBkgUAgIIJIWQgEAgERRIQsEAgERBB1\nyIJMEscxLr74Yvzxj3+Epmm45JJLkMvlcN555zV8IL7+9a9PKAMUCKgjImRBJnn44YdRqVRw2223\nYd26dVi/fj2uvvpqfOITn8Ctt96K3XbbDXfccQcA4KqrrsIpp5yCZ555JuVVCwSzIwRZkEn+8pe/\nNOp/3/a2t2HLli3YuHEjPvShDwEADj30UDzxxBMYHh5GoVDA9ddfj3vuuSfNJQsEcyIEWZBJ3vWu\nd+EXv/gFoijCiy++iJdffhmbN29upCh22GEHvPnmmyiXy6hUKvj85z8/p2m/QJA2IocsyCQrV67E\n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\n","text/plain":["<matplotlib.figure.Figure at 0x7f07375a8650>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"YjdMvvcddRtS","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"base_uri":"https://localhost:8080/","height":880},"outputId":"7b14fab4-393c-4557-cd04-68a77ed74bff","executionInfo":{"status":"error","timestamp":1525039847669,"user_tz":-120,"elapsed":508,"user":{"displayName":"mark nabil","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s128","userId":"100349270716175055813"}}},"cell_type":"code","source":["from turtle import *\n","import math\n","\n","apple = Turtle()\n","\n","def polygon(t, n, length):\n","    for i in range(n):\n","        left(360/n)\n","        forward(length)\n","\n","def draw_circle(t, r):\n","    circumference = 2 * math.pi * r\n","    n = 50\n","    length = circumference / n\n","    polygon(t, n, length)\n","    exitonclick()\n","\n","draw_circle(apple, 30)\n"],"execution_count":46,"outputs":[{"output_type":"error","ename":"TclError","evalue":"ignored","traceback":["\u001b[0;31m\u001b[0m","\u001b[0;31mTclError\u001b[0mTraceback (most recent call last)","\u001b[0;32m<ipython-input-46-799a01879e93>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmath\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mapple\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTurtle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mpolygon\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mt\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlength\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python2.7/lib-tk/turtle.pyc\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, shape, undobuffersize, visible)\u001b[0m\n\u001b[1;32m   3701\u001b[0m                  visible=_CFG[\"visible\"]):\n\u001b[1;32m   3702\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mTurtle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_screen\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3703\u001b[0;31m             \u001b[0mTurtle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_screen\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mScreen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3704\u001b[0m         RawTurtle.__init__(self, Turtle._screen,\n\u001b[1;32m   3705\u001b[0m                            \u001b[0mshape\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python2.7/lib-tk/turtle.pyc\u001b[0m in \u001b[0;36mScreen\u001b[0;34m()\u001b[0m\n\u001b[1;32m   3551\u001b[0m     else return the existing one.\"\"\"\n\u001b[1;32m   3552\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mTurtle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_screen\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3553\u001b[0;31m         \u001b[0mTurtle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_screen\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_Screen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3554\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mTurtle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_screen\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3555\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python2.7/lib-tk/turtle.pyc\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   3567\u001b[0m         \u001b[0;31m# preserved (perhaps by passing it as an optional parameter)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3568\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0m_Screen\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_root\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3569\u001b[0;31m             \u001b[0m_Screen\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_root\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_root\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_Root\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3570\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_root\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtitle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_Screen\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_title\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3571\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_root\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mondestroy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_destroy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python2.7/lib-tk/turtle.pyc\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    456\u001b[0m     \u001b[0;34m\"\"\"Root class for Screen based on Tkinter.\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    457\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 458\u001b[0;31m         \u001b[0mTK\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTk\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    459\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    460\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0msetupcanvas\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwidth\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mheight\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcwidth\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcheight\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python2.7/lib-tk/Tkinter.pyc\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, screenName, baseName, className, useTk, sync, use)\u001b[0m\n\u001b[1;32m   1820\u001b[0m                 \u001b[0mbaseName\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbaseName\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mext\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1821\u001b[0m         \u001b[0minteractive\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1822\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtk\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_tkinter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mscreenName\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbaseName\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mclassName\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minteractive\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwantobjects\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0museTk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msync\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0muse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1823\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0museTk\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1824\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_loadtk\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTclError\u001b[0m: no display name and no $DISPLAY environment variable"]}]},{"metadata":{"id":"2EenI-c281sB","colab_type":"text"},"cell_type":"markdown","source":["# Hat operation for matrices"]},{"metadata":{"id":"FW4Ouh478yNT","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"base_uri":"https://localhost:8080/","height":68},"outputId":"52ac2522-5269-462d-d899-bd84c61fdb56","executionInfo":{"status":"ok","timestamp":1531495495538,"user_tz":-120,"elapsed":595,"user":{"displayName":"mark nabil","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s128","userId":"100349270716175055813"}}},"cell_type":"code","source":["\n","import numpy as np\n","rng = np.random.RandomState(42)\n","n_samples, n_features = 20, 5\n","X = rng.randn(n_samples, n_features)\n","\n","hat = X.dot(np.linalg.inv(X.T.dot(X)).dot(X.T))\n","\n","hat_diag = np.diagonal(hat)\n","trace = hat_diag.sum()  # this is equal to n_features == 5\n","print trace\n","\n","only_diag = np.einsum('ij, ij -> j', X.T, np.linalg.inv(X.T.dot(X)).dot(X.T))\n","\n","print (only_diag == hat_diag).all()  # this evaluates to True\n","print type(hat)"],"execution_count":1,"outputs":[{"output_type":"stream","text":["5.000000000000001\n","False\n","<type 'numpy.ndarray'>\n"],"name":"stdout"}]},{"metadata":{"id":"dBUFdCT_S9zG","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"base_uri":"https://localhost:8080/","height":231},"outputId":"fdadfc19-f5f7-44c6-f955-e2f97aaa87e6","executionInfo":{"status":"error","timestamp":1531497155405,"user_tz":-120,"elapsed":1144,"user":{"displayName":"mark nabil","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s128","userId":"100349270716175055813"}}},"cell_type":"code","source":["from __future__ import (absolute_import, division, print_function, unicode_literals)\n","import numpy as np\n","# from numba import jit, int16\n","from numpy.linalg import cholesky, inv, det\n","import matplotlib.pyplot as plt\n","import pdb\n","\n","\n","class UnscentedKalmanFilter(object):\n","    \"\"\"Filtering implementation for state estimation\n","    This module estimates the state of the UAV from given sensor meaurements\n","    using unscented Kalman filter.\n","    state:\n","        x: position, velocity\n","        R: attitude, angular velocity\n","        power: current, voltage, RPM\n","    state vector:\n","        state: [x,x_dot,R,W]\n","    \"\"\"\n","    def __init__(self, dim_x=1, dim_z=1, dt=0.1, hx=None, fx=None):\n","        self._dt = dt\n","        self._dim_x = dim_x\n","        self._dim_z = dim_z\n","        self.hx = hx\n","        self.fx = fx\n","        self.x = np.zeros(dim_x)\n","        self.P = np.eye(dim_x)\n","        self.Q = np.eye(dim_x)\n","        self.R = np.eye(dim_z)\n","        self.m = 1.5\n","        self.g = 9.8\n","        self.J = np.eye(3)\n","        self.R = np.eye(3)\n","        self.e3 = np.array([0,0,1])\n","        print('Unscented Kalman Filter initialized')\n","\n","    def sigmaPoints(self, x, P, c):\n","        \"\"\"Simg points computation\"\"\"\n","        A = c*cholesky(P).T\n","        Y = np.tile(x,((A.shape)[0],1)).T\n","        return np.vstack((x, Y+A, Y-A)).T\n","\n","    def dss(self, x, u, dt=None):\n","        if dt == None:\n","            dt = self._dt\n","        \"\"\"State space UAV dynamics\"\"\"\n","        A = np.zeros((12,12))\n","        for i in range(6):\n","            A[i][i], A[i][i+1] = 1, dt\n","            A[i+6][i+6] = 1\n","        # TODO: Implement controller input term here\n","        # noting that u = [F, M] remember to bring them to inertial frame\n","        B = np.zeros((self._dim_x, 6))\n","        B[3:6,0:3] = 1/self.m*np.eye(3)\n","        B[-3:,-3:] = self.J\n","        uf = -u[0]*self.R.dot(self.e3)\n","        uf = np.append( uf, self.R.dot(u[1:]))\n","        xp = x + self._dt*B.dot(uf)\n","        return xp\n","\n","    def sss(self, x, u = None):\n","        \"\"\"Sensor state\"\"\"\n","        A = np.zeros((6,12))\n","        for i in range(6):\n","            A[i][i+6] = 1\n","        return A.dot(x)\n","\n","    def f(x):\n","        \"\"\"nonlinear state function\"\"\"\n","        return np.array([x[1],x[2],0.05*x[0]*(x[1]+x[2])])\n","\n","    def h(x):\n","        \"\"\"nonlinear sensor function\"\"\"\n","        return np.array([x[0]])\n","\n","    def ut(self, func, x, wm, wc, n_f, Q, u = None):\n","        \"\"\"unscented transform\n","        args:\n","            f: nonlinear map\n","        output:\n","            mean\n","            sampling points\n","            covariance\n","            deviations\n","        \"\"\"\n","        n, m = x.shape\n","        X = np.zeros((n_f,m))\n","        mu = np.zeros(n_f)\n","        for i in range(m):\n","            X[:,i] = func(x[:,i], u)\n","            mu = mu + wm[i]*X[:,i]\n","        Xd = X - np.tile(mu,(m,1)).T\n","        Sigma = Xd.dot(np.diag(wc.T).dot(Xd.T)) + Q\n","        return (mu, X, Sigma, Xd)\n","\n","    def ukf(self, x, P, z, Q, R, u):\n","        \"\"\"UKF\n","        args:\n","            x: a priori state estimate\n","            P: a priori state covariance\n","            z: current measurement\n","            Q: process noise\n","            R: measurement noise\n","        output:\n","            x: a posteriori state estimation\n","            P: a posteriori state covariance\n","        \"\"\"\n","        n = len(x)\n","        m = len(x)\n","        alpha = 0.75\n","        kappa = 0.\n","        beta = 2.\n","        lamb = alpha**2*(n+kappa)-n\n","        c_n = n+lamb\n","        Wm = np.append(lamb/c_n, 0.5/c_n+np.zeros(2*n))\n","        Wc = np.copy(Wm)\n","        Wc[0] +=  (1-alpha**2+beta)\n","        c_nr=np.sqrt(c_n)\n","        X = self.sigmaPoints(x,P,c_nr)\n","        x1, X1, P1, X2 = self.ut(self.dss, X, Wm, Wc, n, Q, u)\n","        z1,Z1,P2,Z2 = self.ut(self.sss, X1,Wm,Wc, int(n/2), R)\n","        P12=X2.dot(np.diag(Wc).dot(Z2.T))\n","        K=P12.dot(inv(P2))\n","        x=x1+K.dot(z-z1)\n","        P=P1-K.dot(P12.T)\n","        return x, P\n","\n","    # @jit(int16(int16))\n","#    def test(self, a = 3):\n","#        x = a\n","#        return x\n","\n","\n","class TestUKF(unittest.TestCase):\n","\n","    def test_ukf_init(self):\n","        dim_x = 12\n","        dim_z = 6\n","        test_ukf = ukf_uav.UnscentedKalmanFilter(dim_x, dim_z, 1)\n","        np.testing.assert_equal(test_ukf._dim_x, dim_x)\n","        np.testing.assert_equal(test_ukf._dim_z, dim_z)\n","        self._ukf = test_ukf\n","\n","    def test_sigmaPoints(self):\n","        uav = ukf_uav.UnscentedKalmanFilter()\n","        x = np.ones(3)\n","        P = np.eye(3)\n","        c = np.sqrt(2)\n","    def test_ut(self):\n","        uav = ukf_uav.UnscentedKalmanFilter()\n","        assert uav.test(1) == 1\n","        pass\n","\n","    def test_ukf(self):\n","        pass\n","\n","    def test_sss(self):\n","        pass\n","\n","    def test_update(self):\n","        raise NotImplementedError\n","        pass\n","\n","      \n","if __name__=='__main__':\n","    # test(4)\n","    # test.inspect_types()\n","    # print('test')\n","    ukf_t = UnscentedKalmanFilter(12, 6, 0.01)\n","    # ukf_t.ukf(x,P, z, Q, R, u)\n","    Ns = 12 # number of states\n","    s = np.zeros(Ns)\n","    u = np.zeros(4)\n","    q=0.1\n","    r=0.1\n","    Q = q**2*np.eye(Ns)\n","    R = r**2\n","    P = np.eye(Ns)\n","    x = s+q*np.random.random(Ns)\n","    N = 20\n","    xV = np.zeros((Ns,N))\n","    sV = np.copy(xV)\n","    zV = np.zeros((6,N))\n","    for k in range(N):\n","        z = ukf_t.sss(s)+r*np.random.random()\n","        sV[:,k] = s\n","        zV[:,k] = z\n","        x, P = ukf_t.ukf(x, P, z, Q, R, u)\n","        xV[:,k] = x\n","        s = ukf_t.dss(s,u) + q*np.random.random(Ns)\n","        pass"],"execution_count":5,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m\u001b[0m","\u001b[0;31mNameError\u001b[0mTraceback (most recent call last)","\u001b[0;32m<ipython-input-5-af7618ed405d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m    132\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    133\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 134\u001b[0;31m \u001b[0;32mclass\u001b[0m \u001b[0mTestUKF\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0munittest\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTestCase\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    135\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    136\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mtest_ukf_init\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'unittest' is not defined"]}]},{"metadata":{"id":"oA6bmmNlTBO1","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"base_uri":"https://localhost:8080/","height":367},"outputId":"45b14819-bf82-4cc9-de07-a63a9279ff18","executionInfo":{"status":"error","timestamp":1531496374089,"user_tz":-120,"elapsed":781,"user":{"displayName":"mark nabil","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s128","userId":"100349270716175055813"}}},"cell_type":"code","source":["import sys\n","sys.path.append(\"ukf_uav\")\n","import ukf_uav\n","import numpy as np\n","import unittest\n","\n","class TestUKF(unittest.TestCase):\n","\n","    def test_ukf_init(self):\n","        dim_x = 12\n","        dim_z = 6\n","        test_ukf = ukf_uav.UnscentedKalmanFilter(dim_x, dim_z, 1)\n","        np.testing.assert_equal(test_ukf._dim_x, dim_x)\n","        np.testing.assert_equal(test_ukf._dim_z, dim_z)\n","        self._ukf = test_ukf\n","\n","    def test_sigmaPoints(self):\n","        uav = ukf_uav.UnscentedKalmanFilter()\n","        x = np.ones(3)\n","        P = np.eye(3)\n","        c = np.sqrt(2)\n","    def test_ut(self):\n","        uav = ukf_uav.UnscentedKalmanFilter()\n","        assert uav.test(1) == 1\n","        pass\n","\n","    def test_ukf(self):\n","        pass\n","\n","    def test_sss(self):\n","        pass\n","\n","    def test_update(self):\n","        raise NotImplementedError\n","        pass\n","\n","\n","\n","if __name__ == '__main__':\n","    unittest.main()\n"],"execution_count":3,"outputs":[{"output_type":"error","ename":"ImportError","evalue":"ignored","traceback":["\u001b[0;31m\u001b[0m","\u001b[0;31mImportError\u001b[0mTraceback (most recent call last)","\u001b[0;32m<ipython-input-3-23e3bbbec8a1>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0msys\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0msys\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"ukf_uav\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0mukf_uav\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mnumpy\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0munittest\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mImportError\u001b[0m: No module named ukf_uav","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"]}]}]}